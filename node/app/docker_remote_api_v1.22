<!doctype html>
<html class="no-js" lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,t,n){function r(n){if(!t[n]){var o=t[n]={exports:{}};e[n][0].call(o.exports,function(t){var o=e[n][1][t];return r(o||t)},o,o.exports)}return t[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(e,t,n){function r(e,t){return function(){o(e,[(new Date).getTime()].concat(a(arguments)),null,t)}}var o=e("handle"),i=e(2),a=e(3);"undefined"==typeof window.newrelic&&(newrelic=NREUM);var u=["setPageViewName","setCustomAttribute","finished","addToTrace","inlineHit"],c=["addPageAction"],f="api-";i(u,function(e,t){newrelic[t]=r(f+t,"api")}),i(c,function(e,t){newrelic[t]=r(f+t)}),t.exports=newrelic,newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),o("err",[e,(new Date).getTime()])}},{}],2:[function(e,t,n){function r(e,t){var n=[],r="",i=0;for(r in e)o.call(e,r)&&(n[i]=t(r,e[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],3:[function(e,t,n){function r(e,t,n){t||(t=0),"undefined"==typeof n&&(n=e?e.length:0);for(var r=-1,o=n-t||0,i=Array(0>o?0:o);++r<o;)i[r]=e[t+r];return i}t.exports=r},{}],ee:[function(e,t,n){function r(){}function o(e){function t(e){return e&&e instanceof r?e:e?u(e,a,i):i()}function n(n,r,o){e&&e(n,r,o);for(var i=t(o),a=l(n),u=a.length,c=0;u>c;c++)a[c].apply(i,r);var s=f[g[n]];return s&&s.push([m,n,r,i]),i}function p(e,t){w[e]=l(e).concat(t)}function l(e){return w[e]||[]}function d(e){return s[e]=s[e]||o(n)}function v(e,t){c(e,function(e,n){t=t||"feature",g[n]=t,t in f||(f[t]=[])})}var w={},g={},m={on:p,emit:n,get:d,listeners:l,context:t,buffer:v};return m}function i(){return new r}var a="nr@context",u=e("gos"),c=e(2),f={},s={},p=t.exports=o();p.backlog=f},{}],gos:[function(e,t,n){function r(e,t,n){if(o.call(e,t))return e[t];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[t]=r,r}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],handle:[function(e,t,n){function r(e,t,n,r){o.buffer([e],r),o.emit(e,t,n)}var o=e("ee").get("handle");t.exports=r,r.ee=o},{}],id:[function(e,t,n){function r(e){var t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");t.exports=r},{}],loader:[function(e,t,n){function r(){if(!w++){var e=v.info=NREUM.info,t=s.getElementsByTagName("script")[0];if(e&&e.licenseKey&&e.applicationID&&t){c(l,function(t,n){e[t]||(e[t]=n)});var n="https"===p.split(":")[0]||e.sslForHttp;v.proto=n?"https://":"http://",u("mark",["onload",a()],null,"api");var r=s.createElement("script");r.src=v.proto+e.agent,t.parentNode.insertBefore(r,t)}}}function o(){"complete"===s.readyState&&i()}function i(){u("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var u=e("handle"),c=e(2),f=window,s=f.document;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:f.XMLHttpRequest,REQ:f.Request,EV:f.Event,PR:f.Promise,MO:f.MutationObserver},e(1);var p=""+location,l={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-943.min.js"},d=window.XMLHttpRequest&&XMLHttpRequest.prototype&&XMLHttpRequest.prototype.addEventListener&&!/CriOS/.test(navigator.userAgent),v=t.exports={offset:a(),origin:p,features:{},xhrWrappable:d};s.addEventListener?(s.addEventListener("DOMContentLoaded",i,!1),f.addEventListener("load",r,!1)):(s.attachEvent("onreadystatechange",o),f.attachEvent("onload",r)),u("mark",["firstbyte",a()],null,"api");var w=0},{}]},{},["loader"]);</script>
<meta name="keywords" content="docker, docker open source, docker platform, distributed applications, microservices, containers, docker containers, docker software, docker virtualization" />
<meta property="og:site_name" content="Docker" />
<meta property="og:type" content="website" />
<meta property="og:title" content="Remote API v1.22" />
<meta property="og:updated_time" content="2016-06-07T22:58:05-07:00" />
<meta property="og:image" content="https://www.docker.com/sites/default/files/social/docker-facebook-share.png" />
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:site" content="@docker_docs" />
<meta name="twitter:url" content="https://twitter.com/docker_docs" />
<meta name="twitter:title" content="Docs team" />
<meta name="twitter:image:src" content="https://www.docker.com/sites/default/files/social/docker-twitter-share.png" />
<meta property="article:published_time" content="2016-05-30T01:18:23-07:00" />
<meta property="article:modified_time" content="2016-06-07T22:58:05-07:00" />
	<meta charset="utf-8"/>
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>Remote API v1.22</title>
	<meta name="description" content="API Documentation for Docker">
	<meta name="keywords" content="API, Docker, rcli, REST,  documentation">
	<link rel="apple-touch-icon" sizes="57x57" href="../../../../favicons/apple-touch-icon-57x57.png">
	<link rel="apple-touch-icon" sizes="60x60" href="../../../../favicons/apple-touch-icon-60x60.png">
	<link rel="apple-touch-icon" sizes="72x72" href="../../../../favicons/apple-touch-icon-72x72.png">
	<link rel="apple-touch-icon" sizes="76x76" href="../../../../favicons/apple-touch-icon-76x76.png">
	<link rel="apple-touch-icon" sizes="114x114" href="../../../../favicons/apple-touch-icon-114x114.png">
	<link rel="apple-touch-icon" sizes="120x120" href="../../../../favicons/apple-touch-icon-120x120.png">
	<link rel="icon" type="image/png" href="../../../../favicons/favicon-32x32.png" sizes="32x32">
	<link rel="icon" type="image/png" href="../../../../favicons/favicon-96x96.png" sizes="96x96">
	<link rel="icon" type="image/png" href="../../../../favicons/favicon-16x16.png" sizes="16x16">
	<link rel="manifest" href="../../../../favicons/manifest.json">
	<meta name="msapplication-TileColor" content="#da532c">
	<meta name="theme-color" content="#ffffff">
	<link rel="stylesheet" href="../../../../assets/css/allcss.css" />
	<link rel="stylesheet" href="../../../../assets/css/app2.css" />
	<link rel="stylesheet" href="../../../../assets/css/responsive.css" />
	<link rel="stylesheet" href="../../../../assets/css/p2p.css" />
	<link rel="stylesheet" href="../../../../assets/css/mobile_responsive.css" />
	<link rel="stylesheet" href="../../../../assets/css/temporary.css" />
	<link rel="stylesheet" href="../../../../documentation.css" />
	<script async src="https://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js"></script>
	
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/docsearch.js/2/docsearch.min.css" />
</head>
<body class="html front not-logged-in no-sidebars page-node page-node- page-node-1 node-type-front-page path-docker" ng-app="Docker" ng-controller="DockerController">
		<div class="off-canvas-wrap" data-offcanvas>
		<div class="inner-wrap">
			<a class="left-off-canvas-toggle" href="#">
	<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="35px" height="35px" viewBox="0 0 35 35" enable-background="new 0 0 35 35" xml:space="preserve">
		<path fill="#fff" d="M30.583,9.328c0,0.752-0.539,1.362-1.203,1.362H5.113c-0.664,0-1.203-0.61-1.203-1.362l0,0
		c0-0.752,0.539-1.362,1.203-1.362H29.38C30.045,7.966,30.583,8.576,30.583,9.328L30.583,9.328z" />
		<path fill="#fff" d="M30.583,17.09c0,0.752-0.539,1.362-1.203,1.362H5.113c-0.664,0-1.203-0.61-1.203-1.362l0,0
		c0-0.752,0.539-1.362,1.203-1.362H29.38C30.045,15.728,30.583,16.338,30.583,17.09L30.583,17.09z" />
		<path fill="#fff" d="M30.583,24.387c0,0.752-0.539,1.362-1.203,1.362H5.113c-0.664,0-1.203-0.61-1.203-1.362l0,0
		c0-0.752,0.539-1.362,1.203-1.362H29.38C30.045,23.025,30.583,23.635,30.583,24.387L30.583,24.387z" />
	</svg>
</a>
<header class="main-header">
	<div class="top-right-bg"></div>
	<div class="container">
		<div class="row">
			<div class="col-xs-2">
				<a href="../../../../"><img class="logo" src="../../../../assets/images/logo-docker-main.png"></a>
			</div>
			<div class="col-xs-10">
				<ul class="nav-global"><li class="first leaf menu-mlid-603"><a href="https://docs.docker.com/" target="_blank">Docs</a></li>
<li class="leaf menu-mlid-1997"><a href="https://www.docker.com/community/events">Events</a></li>
<li class="leaf menu-mlid-1998"><a href="https://www.docker.com/docker-community">Community</a></li>
<li class="leaf menu-mlid-1999"><a href="https://www.docker.com/docker-support-services">Support</a></li>
<li class="leaf menu-mlid-402"><a href="https://training.docker.com/" target="_blank">Training</a></li>
<li class="leaf menu-mlid-2000"><a href="https://www.docker.com/partners/partner-program">Partners</a></li>
<li class="leaf menu-mlid-602"><a href="https://blog.docker.com/" target="_blank">Blog</a></li>
<li class="leaf menu-mlid-2001"><a href="https://cloud.docker.com/login/" target="_blank">Log-In</a></li>
<li class="last leaf menu-mlid-2002"><a href="https://cloud.docker.com/" target="_blank">Sign-up</a></li>
</ul><ul class="nav-main"><li class="first leaf menu-mlid-398"><a href="https://www.docker.com/what-docker">What is Docker?</a></li>
<li class="expanded menu-mlid-1059 has-submenu"><a href="https://www.docker.com/enterprise">Solutions</a><ul class="nav-main"><li class="first leaf menu-mlid-1064"><a href="https://www.docker.com/enterprise">Solutions</a></li>
<li class="leaf menu-mlid-2365"><a href="https://www.docker.com/enterprise">Overview</a></li>
<li class="collapsed menu-mlid-993"><a href="https://www.docker.com/use-cases">Use Cases</a></li>
<li class="leaf menu-mlid-1034"><a href="https://www.docker.com/customers">Customers</a></li>
<li class="leaf menu-mlid-1587"><a href="https://www.docker.com/industry-government">For Government</a></li>
<li class="last collapsed menu-mlid-985"><a href="https://www.docker.com/products/resources">Resources</a></li>
</ul></li>
<li class="leaf menu-mlid-954"><a href="https://www.docker.com/products/overview">Get Docker</a></li>
<li class="leaf menu-mlid-1055"><a href="https://www.docker.com/pricing">Pricing</a></li>
<li class="leaf menu-mlid-2005 double-navstyle secondlast"><a href="https://www.docker.com/technologies/overview">Open Source</a></li>
<li class="last expanded menu-mlid-397 has-submenu"><a href="https://www.docker.com/company">Company</a><ul class="nav-main"><li class="first leaf menu-mlid-698"><a href="https://www.docker.com/company">Company</a></li>
<li class="leaf menu-mlid-2366"><a href="https://www.docker.com/company">Overview</a></li>
<li class="leaf menu-mlid-622"><a href="https://www.docker.com/careers">Careers</a></li>
<li class="last leaf menu-mlid-1086"><a href="https://www.docker.com/company/news-and-press">News &amp; Press</a></li>
</ul></li>
</ul>			</div>
		</div>
	</div>
</header>			<aside class="left-off-canvas-menu">
	<ul class="off-canvas-list"><li class="first leaf menu-mlid-398"><a href="https://www.docker.com/what-docker">What is Docker?</a></li>
<li class="expanded menu-mlid-1059 has-submenu"><a href="https://www.docker.com/enterprise">Solutions</a><ul class="left-submenu"><li class="back"><a href="#">Back</a></li><li class="first leaf menu-mlid-1064"><a href="https://www.docker.com/enterprise">Solutions</a></li>
<li class="leaf menu-mlid-2365"><a href="https://www.docker.com/enterprise">Overview</a></li>
<li class="collapsed menu-mlid-993"><a href="https://www.docker.com/use-cases">Use Cases</a></li>
<li class="leaf menu-mlid-1034"><a href="https://www.docker.com/customers">Customers</a></li>
<li class="leaf menu-mlid-1587"><a href="https://www.docker.com/industry-government">For Government</a></li>
<li class="last collapsed menu-mlid-985"><a href="https://www.docker.com/products/resources">Resources</a></li>
</ul></li>
<li class="leaf menu-mlid-954"><a href="https://www.docker.com/products/overview">Get Docker</a></li>
<li class="leaf menu-mlid-1055"><a href="https://www.docker.com/pricing">Pricing</a></li>
<li class="leaf menu-mlid-2005 double-navstyle secondlast"><a href="https://www.docker.com/technologies/overview">Open Source</a></li>
<li class="last expanded menu-mlid-397 has-submenu"><a href="https://www.docker.com/company">Company</a><ul class="left-submenu"><li class="back"><a href="#">Back</a></li><li class="first leaf menu-mlid-698"><a href="https://www.docker.com/company">Company</a></li>
<li class="leaf menu-mlid-2366"><a href="https://www.docker.com/company">Overview</a></li>
<li class="leaf menu-mlid-622"><a href="https://www.docker.com/careers">Careers</a></li>
<li class="last leaf menu-mlid-1086"><a href="https://www.docker.com/company/news-and-press">News &amp; Press</a></li>
</ul></li>
</ul><ul class="nav-global-off-canvas"><li class="first leaf menu-mlid-603"><a href="https://docs.docker.com/" target="_blank">Docs</a></li>
<li class="leaf menu-mlid-1997"><a href="https://www.docker.com/community/events">Events</a></li>
<li class="leaf menu-mlid-1998"><a href="https://www.docker.com/docker-community">Community</a></li>
<li class="leaf menu-mlid-1999"><a href="https://www.docker.com/docker-support-services">Support</a></li>
<li class="leaf menu-mlid-402"><a href="https://training.docker.com/" target="_blank">Training</a></li>
<li class="leaf menu-mlid-2000"><a href="https://www.docker.com/partners/partner-program">Partners</a></li>
<li class="leaf menu-mlid-602"><a href="https://blog.docker.com/" target="_blank">Blog</a></li>
<li class="leaf menu-mlid-2001"><a href="https://cloud.docker.com/login/" target="_blank">Log-In</a></li>
<li class="last leaf menu-mlid-2002"><a href="https://cloud.docker.com/" target="_blank">Sign-up</a></li>
</ul></aside>
						<div class="dockercon16">

<section class="title_section darkblue">
</section>

<div id="DockerDocumentation">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-12 col-sm-3 col-md-2 docsidebarnav_section">
                <div class="region region-hero-sub">
  
<ul class="nav-sub">


    <li class="leaf  active  menu-open  ">
        <a href="" class="expand-menu  active"><span class="menu-icon" aria-hidden="true"></span>  Docker Engine</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/understanding-docker/" class=""> Docker Overview </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Install</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/installation/mac/" class=""> Installation on Mac OS X </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/windows/" class=""> Installation on Windows </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  On Linux distributions</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/installation/linux/ubuntulinux/" class=""> Installation on Ubuntu  </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/linux/rhel/" class=""> Installation on Red Hat Enterprise Linux </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/linux/centos/" class=""> Installation on CentOS </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/linux/fedora/" class=""> Installation on Fedora </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/linux/debian/" class=""> Installation on Debian </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/linux/archlinux/" class=""> Installation on Arch Linux </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/linux/cruxlinux/" class=""> Installation on CRUX Linux </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/linux/frugalware/" class=""> Installation on FrugalWare </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/linux/gentoolinux/" class=""> Installation on Gentoo </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/linux/oracle/" class=""> Installation on Oracle Linux </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/linux/SUSE/" class=""> Installation on openSUSE and SUSE Linux Enterprise </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  On cloud providers</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/installation/cloud/overview/" class=""> Choose how to install </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/cloud/cloud-ex-aws/" class=""> Example: Manual install on cloud provider </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/cloud/cloud-ex-machine-ocean/" class=""> Example: Use Docker Machine to provision cloud hosts </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../engine/installation/binaries/" class=""> Installation from binaries </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Get Started with Docker</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/getstarted/" class=""> Get Started with Docker </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/getstarted/step_one/" class=""> Install Docker and run hello-world </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/getstarted/step_two/" class=""> Understand images &amp; containers </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/getstarted/step_three/" class=""> Find &amp; run the whalesay image </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/getstarted/step_four/" class=""> Build your own image </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/getstarted/step_five/" class=""> Create a Docker Hub account &amp; repository </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/getstarted/step_six/" class=""> Tag, push, &amp; pull your image </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/getstarted/last_page/" class=""> Learning more </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Learn by example</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/tutorials/dockerizing/" class=""> Hello world in a container </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/tutorials/usingdocker/" class=""> Run a simple application </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/tutorials/dockerimages/" class=""> Build your own images </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/tutorials/networkingcontainers/" class=""> Network containers </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/tutorials/dockervolumes/" class=""> Manage data in containers </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/tutorials/dockerrepos/" class=""> Store images on Docker Hub </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  User Guide</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/userguide/intro/" class=""> Introduction </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Work with images</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/userguide/eng-image/dockerfile_best-practices/" class=""> Best practices for writing Dockerfiles </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/eng-image/baseimages/" class=""> Create a base image </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/eng-image/image_management/" class=""> Image management </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker storage drivers</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/userguide/storagedriver/imagesandcontainers/" class=""> Understand images, containers, and storage drivers </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/storagedriver/selectadriver/" class=""> Select a storage driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/storagedriver/aufs-driver/" class=""> AUFS storage driver in practice </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/storagedriver/btrfs-driver/" class=""> Btrfs storage in practice </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/storagedriver/device-mapper-driver/" class=""> Device mapper storage in practice </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/storagedriver/overlayfs-driver/" class=""> OverlayFS storage in practice </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/storagedriver/zfs-driver/" class=""> ZFS storage in practice </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Network configuration</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/" class=""> Docker container networking </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/work-with-networks/" class=""> Work with network commands </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/get-started-overlay/" class=""> Get started with multi-host networking </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/overlay-security-model/" class=""> Swarm mode overlay network security model </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/configure-dns/" class=""> Configure container DNS in user-defined networks </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Default bridge network</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/default_network/dockerlinks/" class=""> Legacy container links </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/default_network/binding/" class=""> Bind container ports to the host </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/default_network/build-bridges/" class=""> Build your own bridge </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/default_network/configure-dns/" class=""> Configure container DNS </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/default_network/custom-docker0/" class=""> Customize the docker0 bridge </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/default_network/container-communication/" class=""> Understand container communication </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/networking/default_network/ipv6/" class=""> IPv6 with Docker </a>
    </li>


</ul>

    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../engine/userguide/labels-custom-metadata/" class=""> Apply custom metadata </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Admin Guide</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/admin/" class=""> Configuring and running Docker </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/host_integration/" class=""> Automatically start containers </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/live-restore/" class=""> Keep containers alive during daemon downtime </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/systemd/" class=""> Control and configure Docker with systemd </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/formatting/" class=""> Format command and log output </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/registry_mirror/" class=""> Run a local registry mirror </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Logging</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/admin/logging/overview/" class=""> Configuring Logging Drivers </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/logging/log_tags/" class=""> Log tags for logging driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/logging/awslogs/" class=""> Amazon CloudWatch Logs logging driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/logging/etwlogs/" class=""> ETW logging driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/logging/fluentd/" class=""> Fluentd logging driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/logging/gcplogs/" class=""> Google Cloud Logging driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/logging/journald/" class=""> Journald logging driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/logging/splunk/" class=""> Splunk logging driver </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/dsc/" class=""> PowerShell DSC Usage </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/chef/" class=""> Using Chef </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/puppet/" class=""> Using Puppet </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/using_supervisord/" class=""> Using Supervisor with Docker </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/runmetrics/" class=""> Runtime metrics </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/admin/ambassador_pattern_linking/" class=""> Link via an ambassador container </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Manage a swarm</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/swarm/" class=""> Swarm mode overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/key-concepts/" class=""> Swarm mode key concepts </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Get started with swarm mode</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/swarm/swarm-tutorial/" class=""> Set up for the tutorial </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/swarm-tutorial/create-swarm/" class=""> Create a swarm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/swarm-tutorial/add-nodes/" class=""> Add nodes to the swarm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/swarm-tutorial/deploy-service/" class=""> Deploy a service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/swarm-tutorial/inspect-service/" class=""> Inspect the service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/swarm-tutorial/scale-service/" class=""> Scale the service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/swarm-tutorial/delete-service/" class=""> Delete the service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/swarm-tutorial/rolling-update/" class=""> Apply rolling updates </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/swarm-tutorial/drain-node/" class=""> Drain a node </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  How swarm mode works</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/swarm/how-swarm-mode-works/nodes/" class=""> How nodes work </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/how-swarm-mode-works/services/" class=""> How services work </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/swarm-mode/" class=""> Run Docker Engine in swarm mode </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/join-nodes/" class=""> Join nodes to a swarm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/manage-nodes/" class=""> Manage nodes in a swarm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/services/" class=""> Deploy services to a swarm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/networking/" class=""> Attach services to an overlay network </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/ingress/" class=""> Use swarm mode routing mesh </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/admin_guide/" class=""> Swarm administration guide </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/swarm/raft/" class=""> Raft consensus in swarm mode </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Secure Engine</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/security/security/" class=""> Docker security </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/security/non-events/" class=""> Docker Security Non-events </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/security/https/" class=""> Protect the Docker daemon socket </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/security/certificates/" class=""> Using certificates for repository client verification </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Use trusted images</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/security/trust/content_trust/" class=""> Content trust in Docker </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/security/trust/trust_automation/" class=""> Automation with content trust </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/security/trust/trust_delegation/" class=""> Delegations for content trust </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/security/trust/deploying_notary/" class=""> Deploying Notary </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/security/trust/trust_key_mng/" class=""> Manage keys for content trust </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/security/trust/trust_sandbox/" class=""> Play in a content trust sandbox </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../engine/security/apparmor/" class=""> AppArmor security profiles for Docker </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/security/seccomp/" class=""> Seccomp security profiles for Docker </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Extend Engine</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/extend/plugins_authorization/" class=""> Access authorization plugin </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/extend/plugins/" class=""> Extending Engine with plugins </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/extend/plugins_network/" class=""> Docker network driver plugins </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/extend/plugins_volume/" class=""> Volume plugins </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/extend/plugin_api/" class=""> Plugins API </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Dockerize an application</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/examples/mongodb/" class=""> Dockerizing MongoDB </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/examples/postgresql_service/" class=""> Dockerizing PostgreSQL </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/examples/couchdb_data_volumes/" class=""> Dockerizing a CouchDB service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/examples/couchbase/" class=""> Dockerizing a Couchbase service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/examples/running_redis_service/" class=""> Dockerizing a Redis service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/examples/running_riak_service/" class=""> Dockerizing a Riak service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/examples/running_ssh_service/" class=""> Dockerizing an SSH service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/examples/apt-cacher-ng/" class=""> Dockerizing an apt-cacher-ng service </a>
    </li>


</ul>

    </li>



    <li class="leaf  active  menu-open  ">
        <a href="" class="expand-menu  active"><span class="menu-icon" aria-hidden="true"></span>  Engine reference</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/reference/builder/" class=""> Dockerfile reference </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/run/" class=""> Docker run reference </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Command line reference</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/" class=""> Docker commands </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/cli/" class=""> Use the Docker command line </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/dockerd/" class=""> dockerd </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/attach/" class=""> attach </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/build/" class=""> build </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/commit/" class=""> commit </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/cp/" class=""> cp </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/create/" class=""> create </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/deploy/" class=""> deploy </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/diff/" class=""> diff </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/events/" class=""> events </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/exec/" class=""> exec </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/export/" class=""> export </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/history/" class=""> history </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/images/" class=""> images </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/import/" class=""> import </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/info/" class=""> info </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/inspect/" class=""> inspect </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/kill/" class=""> kill </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/load/" class=""> load </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/login/" class=""> login </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/logout/" class=""> logout </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/logs/" class=""> logs </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/network_connect/" class=""> network connect </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/network_create/" class=""> network create </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/network_disconnect/" class=""> network disconnect </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/network_inspect/" class=""> network inspect </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/network_ls/" class=""> network ls </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/network_rm/" class=""> network rm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/node_demote/" class=""> node demote </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/node_inspect/" class=""> node inspect </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/node_ls/" class=""> node ls </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/node_promote/" class=""> node promote </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/node_ps/" class=""> node ps </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/node_rm/" class=""> node rm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/node_update/" class=""> node update </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/pause/" class=""> pause </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/plugin_disable/" class=""> plugin disable </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/plugin_enable/" class=""> plugin enable </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/plugin_inspect/" class=""> plugin inspect </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/plugin_install/" class=""> plugin install </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/plugin_ls/" class=""> plugin ls </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/plugin_rm/" class=""> plugin rm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/port/" class=""> port </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/ps/" class=""> ps </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/pull/" class=""> pull </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/push/" class=""> push </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/rename/" class=""> rename </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/restart/" class=""> restart </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/rm/" class=""> rm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/rmi/" class=""> rmi </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/run/" class=""> run </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/save/" class=""> save </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/search/" class=""> search </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/service_create/" class=""> service create </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/service_inspect/" class=""> service inspect </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/service_ls/" class=""> service ls </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/service_ps/" class=""> service ps </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/service_rm/" class=""> service rm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/service_scale/" class=""> service scale </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/service_update/" class=""> service update </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/stack_config/" class=""> stack config </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/stack_deploy/" class=""> stack deploy </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/stack_rm/" class=""> stack rm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/stack_services/" class=""> stack services </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/stack_tasks/" class=""> stack tasks </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/start/" class=""> start </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/stats/" class=""> stats </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/stop/" class=""> stop </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/swarm_init/" class=""> swarm init </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/swarm_join/" class=""> swarm join </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/swarm_join_token/" class=""> swarm join-token </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/swarm_leave/" class=""> swarm leave </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/swarm_update/" class=""> swarm update </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/tag/" class=""> tag </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/top/" class=""> top </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/unpause/" class=""> unpause </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/update/" class=""> update </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/version/" class=""> version </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/volume_create/" class=""> volume create </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/volume_inspect/" class=""> volume inspect </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/volume_ls/" class=""> volume ls </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/volume_rm/" class=""> volume rm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/commandline/wait/" class=""> wait </a>
    </li>


</ul>

    </li>



    <li class="leaf  active  menu-open  ">
        <a href="" class="expand-menu  active"><span class="menu-icon" aria-hidden="true"></span>  API Reference</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../engine/reference/api/docker_remote_api/" class=""> Remote API </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/api/docker_remote_api_v1.25/" class=""> Remote API v1.25 </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/api/docker_remote_api_v1.24/" class=""> Remote API v1.24 </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/api/docker_remote_api_v1.23/" class=""> Remote API v1.23 </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/api/docker_remote_api_v1.22/" class=" active currentPage"> Remote API v1.22 </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/api/docker_remote_api_v1.21/" class=""> Remote API v1.21 </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/api/docker_remote_api_v1.20/" class=""> Remote API v1.20 </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/api/docker_remote_api_v1.19/" class=""> Remote API v1.19 </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/api/docker_remote_api_v1.18/" class=""> Remote API v1.18 </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/api/remote_api_client_libraries/" class=""> Remote API client libraries </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/api/docker_io_accounts_api/" class=""> docker.io accounts API </a>
    </li>


</ul>

    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../engine/migration/" class=""> Migrate to Engine 1.10 </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/breaking_changes/" class=""> Breaking changes </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/deprecated/" class=""> Deprecated Engine Features </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/faq/" class=""> FAQ </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker for Mac</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-for-mac/" class=""> Getting Started </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-mac/docker-toolbox/" class=""> Docker for Mac vs. Docker Toolbox </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-mac/multi-arch/" class=""> Leveraging Multi-CPU Architecture Support  </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-mac/networking/" class=""> Networking  </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-mac/osxfs/" class=""> File system sharing  </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-mac/troubleshoot/" class=""> Logs and Troubleshooting </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-mac/faqs/" class=""> FAQs </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-mac/examples/" class="">  Example Applications </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-mac/opensource/" class=""> Open Source Licensing </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-mac/release-notes/" class=""> Release Notes </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker for Windows</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-for-windows/" class=""> Getting Started </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-windows/troubleshoot/" class=""> Logs and Troubleshooting </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-windows/faqs/" class=""> FAQs </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-windows/examples/" class="">  Example Applications </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-windows/opensource/" class=""> Open Source Licensing </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-for-windows/release-notes/" class=""> Release Notes </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker Compose</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../compose/overview/" class=""> Overview of Docker Compose </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/install/" class=""> Install Compose </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/gettingstarted/" class=""> Getting Started </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/bundles/" class=""> Docker Stacks and Distributed Application Bundles </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/swarm/" class=""> Using Compose with Swarm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/django/" class=""> Quickstart: Compose and Django </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/rails/" class=""> Quickstart: Compose and Rails </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/wordpress/" class=""> Quickstart: Compose and WordPress </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/env-file/" class=""> Environment file </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/environment-variables/" class=""> Environment variables in Compose </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/extends/" class=""> Extending Services in Compose </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/networking/" class=""> Networking in Compose </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/production/" class=""> Using Compose in Production </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/compose-file/" class=""> Compose File Reference </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Command-line Reference</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../compose/reference/overview/" class=""> Overview of docker-compose CLI </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/envvars/" class=""> CLI Environment Variables </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/build/" class=""> build </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/bundle/" class=""> bundle </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/config/" class=""> config </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/create/" class=""> create </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/down/" class=""> down </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/events/" class=""> events </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/exec/" class=""> exec </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/help/" class=""> help </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/kill/" class=""> kill </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/logs/" class=""> logs </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/pause/" class=""> pause </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/port/" class=""> port </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/ps/" class=""> ps </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/pull/" class=""> pull </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/push/" class=""> push </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/restart/" class=""> restart </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/rm/" class=""> rm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/run/" class=""> run </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/scale/" class=""> scale </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/start/" class=""> start </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/stop/" class=""> stop </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/unpause/" class=""> unpause </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/reference/up/" class=""> up </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../compose/completion/" class=""> Command-line Completion </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/link-env-deprecated/" class=""> Link Environment Variables </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/startup-order/" class=""> Controlling startup order </a>
    </li>



    <li class="leaf ">
        <a href="../../../../compose/faq/" class=""> Frequently Asked Questions </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  CS Docker Engine</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../cs-engine/install/" class=""> Install CS Docker Engine </a>
    </li>



    <li class="leaf ">
        <a href="../../../../cs-engine/upgrade/" class=""> Upgrade </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Release notes</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../cs-engine/release-notes/release-notes/" class=""> CS Engine release notes </a>
    </li>



    <li class="leaf ">
        <a href="../../../../cs-engine/release-notes/prior-release-notes/" class=""> Prior CS Engine release notes </a>
    </li>


</ul>

    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Universal Control Plane</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../ucp/overview/" class=""> Universal Control Plane overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/install-sandbox/" class=""> Evaluate UCP in a sandbox </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/architecture/" class=""> Architecture </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Installation</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../ucp/installation/system-requirements/" class=""> System requirements </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/installation/plan-production-install/" class=""> Plan a production installation </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/installation/install-production/" class=""> Install UCP for production </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/installation/install-offline/" class=""> Install offline </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/installation/license/" class=""> License UCP </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/installation/upgrade/" class=""> Upgrade UCP </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/installation/uninstall/" class=""> Uninstall UCP </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  UCP tool reference</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../ucp/reference/backup/" class=""> backup </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/dump-certs/" class=""> dump-certs </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/engine-discovery/" class=""> engine-discovery </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/fingerprint/" class=""> fingerprint </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/help/" class=""> help </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/id/" class=""> id </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/images/" class=""> images </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/install/" class=""> install </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/join/" class=""> join </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/regen-certs/" class=""> regen-certs.md </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/restart/" class=""> restart </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/restore/" class=""> restore </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/stop/" class=""> stop </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/support/" class=""> support </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/uninstall/" class=""> uninstall </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/reference/upgrade/" class=""> upgrade </a>
    </li>


</ul>

    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Access UCP</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../ucp/access-ucp/web-based-access/" class=""> Web-based access </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/access-ucp/cli-based-access/" class=""> CLI-based access </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Configuration</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../ucp/configuration/use-externally-signed-certs/" class=""> Use externally-signed certificates </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/configuration/configure-logs/" class=""> Configure UCP logging </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/configuration/dtr-integration/" class=""> Integrate with Docker Trusted Registry </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/configuration/ldap-integration/" class=""> Integrate with LDAP </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/configuration/multi-host-networking/" class=""> Set up container networking </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Monitor and troubleshoot</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../ucp/monitor/monitor-ucp/" class=""> Monitor your cluster </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/monitor/troubleshoot-ucp/" class=""> Troubleshoot your cluster </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/monitor/troubleshoot-configurations/" class=""> Troubleshoot cluster configurations </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  High-availability</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../ucp/high-availability/set-up-high-availability/" class=""> Set up high availability </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/high-availability/replicate-cas/" class=""> Replicate CAs for high availability </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/high-availability/backups-and-disaster-recovery/" class=""> Backups and disaster recovery </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  User management</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../ucp/user-management/authentication-and-authorization/" class=""> Authentication and authorization </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/user-management/create-and-manage-users/" class=""> Create and manage users </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/user-management/create-and-manage-teams/" class=""> Create and manage teams </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/user-management/permission-levels/" class=""> Permission levels </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Applications</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../ucp/applications/deploy-app-ui/" class=""> Deploy an app from the UI </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/applications/deploy-app-cli/" class=""> Deploy an app from the CLI </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../ucp/support/" class=""> Get support </a>
    </li>



    <li class="leaf ">
        <a href="../../../../ucp/release_notes/" class=""> Release Notes </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker Trusted Registry</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/" class=""> Docker Trusted Registry overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/architecture/" class=""> Architecture </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Installation</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/install/system-requirements/" class=""> System requirements </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/install/" class=""> Install Docker Trusted Registry </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/install/install-dtr-offline/" class=""> Install offline </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/install/license/" class=""> License DTR </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Upgrade</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/install/upgrade/upgrade-major/" class=""> Upgrade from 1.4.3 </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/install/upgrade/" class=""> Upgrade from 2.0.0 </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/install/uninstall/" class=""> Uninstall </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  docker/dtr image reference</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/reference/" class=""> Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/reference/backup/" class=""> backup </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/reference/dumpcerts/" class=""> dumpcerts </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/reference/install/" class=""> install </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/reference/join/" class=""> join </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/reference/migrate/" class=""> migrate </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/reference/reconfigure/" class=""> reconfigure </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/reference/remove/" class=""> remove </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/reference/restore/" class=""> restore </a>
    </li>


</ul>

    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Configuration</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/configure/configuration/" class=""> Configuration overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/configure/config-general/" class=""> Configure general settings </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/configure/config-security/" class=""> Security configuration </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/configure/config-storage/" class=""> Storage configuration </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Monitor and troubleshoot</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/monitor-troubleshoot/" class=""> Monitor DTR </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/monitor-troubleshoot/troubleshoot/" class=""> Troubleshoot DTR </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  High-availability</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/high-availability/" class=""> Set up high availability </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/high-availability/backups-and-disaster-recovery/" class=""> Backups and disaster recovery </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  User management</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/user-management/" class=""> Authentication and authorization </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/user-management/create-and-manage-users/" class=""> Create and manage users </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/user-management/create-and-manage-orgs/" class=""> Create and manage organizations </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/user-management/create-and-manage-teams/" class=""> Create and manage teams </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/user-management/permission-levels/" class=""> Permission levels </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Repositories and images</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/repos-and-images/" class=""> Configure your Docker Engine </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/repos-and-images/pull-an-image/" class=""> Pull an image </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/repos-and-images/push-an-image/" class=""> Push an image </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/repos-and-images/delete-an-image/" class=""> Delete an image </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  DTR APIs</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../apidocs/overview/" class=""> Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../apidocs/v1.3.3/" class=""> v1.3.3 API </a>
    </li>



    <li class="leaf ">
        <a href="../../../../apidocs/v1.4.0/" class=""> v1.4.0 API </a>
    </li>



    <li class="leaf ">
        <a href="../../../../apidocs/v2.0.0/" class=""> v2.0.0 API </a>
    </li>



    <li class="leaf ">
        <a href="../../../../apidocs/v2.0.1/" class=""> v2.0.1 API </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Release notes</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/release-notes/" class=""> Trusted Registry release notes </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/release-notes/prior-release-notes/" class=""> Prior Trusted Registry release notes </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../docker-trusted-registry/support/" class=""> Get support </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker Cloud</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-cloud/overview/" class=""> Docker Cloud Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/dockerid/" class=""> Docker ID and Settings </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/orgs/" class=""> Organizations and Teams </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Getting Started</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/intro_cloud/" class=""> Introducing Docker Cloud </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/connect-infra/" class=""> Link to your Infrastructure </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/your_first_node/" class=""> Deploy your first node </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/your_first_service/" class=""> Deploy your first service </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Deploy an application</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/1_introduction/" class=""> Introduction to Deploying an app in Docker Cloud </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/2_set_up/" class=""> Set up your environment </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/3_prepare_the_app/" class=""> Prepare the application </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/4_push_to_cloud_registry/" class=""> Push the image to Docker Cloud&#39;s Registry </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/5_deploy_the_app_as_a_service/" class=""> Deploy the app as a Docker Cloud service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/6_define_environment_variables/" class=""> Define environment variables </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/7_scale_the_service/" class=""> Scale the service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/8_view_logs/" class=""> View service logs </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/9_load-balance_the_service/" class=""> Load-balance the service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/10_provision_a_data_backend_for_your_service/" class=""> Provision a data backend for the service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/11_service_stacks/" class=""> Stackfiles for your service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/getting-started/deploy-app/12_data_management_with_volumes/" class=""> Data management with Volumes </a>
    </li>


</ul>

    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker cloud infrastructure menu</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/" class=""> Docker Cloud network overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/deployment-strategies/" class=""> Container distribution strategies </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/link-aws/" class=""> Link to Amazon Web Services hosts </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/link-do/" class=""> Link to DigitalOcean hosts </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/link-azure/" class=""> Link to Microsoft Azure hosts </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/link-packet/" class=""> Link to Packet hosts </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/link-softlayer/" class=""> Link to SoftLayer hosts </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/ssh-into-a-node/" class=""> SSH into a Docker Cloud-managed node </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/docker-upgrade/" class=""> Upgrade Docker Engine on a node </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/byoh/" class=""> Use the Docker Cloud Agent </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/cloud-on-packet.net-faq/" class=""> Using Docker Cloud and Packet.net </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/infrastructure/cloud-on-aws-faq/" class=""> Using Docker Cloud on AWS </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Manage Applications</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/deploy-to-cloud-btn/" class=""> Add a Deploy to Docker Cloud button </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/auto-destroy/" class=""> Automatic container destroy </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/autorestart/" class=""> Automatic container restart </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/auto-redeploy/" class=""> Automatic service redeploy </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/load-balance-hello-world/" class=""> Create a proxy or load balancer </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/deploy-tags/" class=""> Deployment tags </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/stacks/" class=""> Manage service stacks </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/ports/" class=""> Publish and expose service or container ports </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/service-redeploy/" class=""> Redeploy running services </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/service-scaling/" class=""> Scale your service </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/api-roles/" class=""> Service API Roles </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/service-links/" class=""> Service discovery and links </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/stack-yaml-reference/" class=""> Stack YAML reference </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/triggers/" class=""> Use triggers </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/apps/volumes/" class=""> Work with data volumes </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Manage Builds and Images</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-cloud/builds/" class=""> Builds and Images Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/builds/repos/" class=""> Docker Cloud repositories </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/builds/link-source/" class=""> Link to a source code repository </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/builds/push-images/" class=""> Push images to Docker Cloud </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/builds/image-scan/" class=""> Docker Security Scanning </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/builds/automated-build/" class=""> Automated builds </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/builds/automated-testing/" class=""> Automated repository tests </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/builds/advanced/" class=""> Advanced options for Autobuild and Autotest </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/slack-integration/" class=""> Docker Cloud notifications in Slack </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/installing-cli/" class=""> The Docker Cloud CLI </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/docker-errors-faq/" class=""> Known Issues in Docker Cloud </a>
    </li>



    <li class="leaf ">
        <a href="../../../../apidocs/docker-cloud/" class=""> API reference </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-cloud/release-notes/" class=""> Release Notes </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker Hub</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-hub/" class=""> Overview of Docker Hub </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-hub/accounts/" class=""> Your Docker ID </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-hub/orgs/" class=""> Teams &amp; Organizations </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-hub/repos/" class=""> Repositories on Docker Hub </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-hub/builds/" class=""> Automated Builds </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-hub/webhooks/" class=""> Webhooks for automated builds </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-hub/bitbucket/" class=""> Automated Builds with Bitbucket </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-hub/github/" class=""> Automated Builds from GitHub </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-hub/official_repos/" class=""> Official Repositories on Docker Hub </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker Machine</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../machine/overview/" class=""> Machine Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/install-machine/" class=""> Install Machine </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/get-started/" class=""> Get started with a local VM </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/get-started-cloud/" class=""> Provision hosts in the cloud </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Learn by example</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../machine/examples/ocean/" class=""> Provision Digital Ocean Droplets </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/examples/aws/" class=""> Provision AWS EC2 Instances </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../machine/concepts/" class=""> Machine concepts and help </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/migrate-to-machine/" class=""> Migrate from Boot2Docker to Machine </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Command line reference</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../machine/reference/active/" class=""> active </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/config/" class=""> config </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/create/" class=""> create </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/env/" class=""> env </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/help/" class=""> help </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/inspect/" class=""> inspect </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/ip/" class=""> ip </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/kill/" class=""> kill </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/ls/" class=""> ls </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/provision/" class=""> provision </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/regenerate-certs/" class=""> regenerate-certs </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/restart/" class=""> restart </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/rm/" class=""> rm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/scp/" class=""> scp </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/ssh/" class=""> ssh </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/start/" class=""> start </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/status/" class=""> status </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/stop/" class=""> stop </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/upgrade/" class=""> upgrade </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/reference/url/" class=""> url </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Drivers</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../machine/drivers/os-base/" class=""> Driver options and operating system defaults </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/aws/" class=""> Amazon Web Services </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/digital-ocean/" class=""> Digital Ocean </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/generic/" class=""> Generic </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/gce/" class=""> Google Compute Engine </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/soft-layer/" class=""> IBM Softlayer </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/azure/" class=""> Microsoft Azure </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/hyper-v/" class=""> Microsoft Hyper-V </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/openstack/" class=""> OpenStack </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/virtualbox/" class=""> Oracle VirtualBox </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/rackspace/" class=""> Rackspace </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/vm-fusion/" class=""> VMware Fusion </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/vm-cloud/" class=""> VMware vCloud Air </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/vsphere/" class=""> VMware vSphere </a>
    </li>



    <li class="leaf ">
        <a href="../../../../machine/drivers/exoscale/" class=""> exoscale </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../machine/completion/" class=""> Command-line Completion </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker Store</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../docker-store/" class=""> Docker Store Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-store/faq/" class=""> Docker Store FAQs </a>
    </li>



    <li class="leaf ">
        <a href="../../../../docker-store/publish/" class=""> Submit a Product </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker Toolbox</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../toolbox/overview/" class=""> Toolbox Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../toolbox/toolbox_install_mac/" class=""> Install Toolbox on Mac </a>
    </li>



    <li class="leaf ">
        <a href="../../../../toolbox/toolbox_install_windows/" class=""> Install Toolbox on Windows </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Kitematic</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../kitematic/userguide/" class=""> Kitematic User Guide: Intro &amp; Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../kitematic/nginx-web-server/" class=""> Set up an Nginx web server </a>
    </li>



    <li class="leaf ">
        <a href="../../../../kitematic/minecraft-server/" class=""> Set up a Minecraft Server </a>
    </li>



    <li class="leaf ">
        <a href="../../../../kitematic/rethinkdb-dev-database/" class=""> Creating a Local RethinkDB Database for Development </a>
    </li>



    <li class="leaf ">
        <a href="../../../../kitematic/faq/" class=""> Frequently Asked Questions </a>
    </li>



    <li class="leaf ">
        <a href="../../../../kitematic/known-issues/" class=""> Known Issues </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../toolbox/faqs/troubleshoot/" class=""> Troubleshooting </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Component Projects</a>
        
<ul class="nav-sub">


    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker Swarm</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../swarm/overview/" class=""> Swarm Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/get-swarm/" class=""> How to get Swarm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/plan-for-production/" class=""> Plan for Swarm in production </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/install-manual/" class=""> Build a Swarm cluster for production </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Try Swarm at scale</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../swarm/swarm_at_scale/about/" class=""> Learn the application architecture </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/swarm_at_scale/deploy-infra/" class=""> Deploy application infrastructure </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/swarm_at_scale/deploy-app/" class=""> Deploy the application </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/swarm_at_scale/troubleshoot/" class=""> Troubleshoot the application </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../swarm/install-w-machine/" class=""> Install and use Swarm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/multi-manager-setup/" class=""> High availability in Swarm </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/networking/" class=""> Swarm and container networks </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/discovery/" class=""> Discovery </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/provision-with-machine/" class=""> Provision with Machine </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Scheduling</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../swarm/scheduler/filter/" class=""> Filters </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/scheduler/rescheduling/" class=""> Rescheduling </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/scheduler/strategy/" class=""> Strategies </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../swarm/secure-swarm-tls/" class=""> Overview Docker Swarm with TLS </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/configure-tls/" class=""> Configure Docker Swarm for TLS </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Command line reference</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../swarm/reference/create/" class=""> create </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/reference/help/" class=""> help </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/reference/join/" class=""> join </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/reference/list/" class=""> list </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/reference/manage/" class=""> manage </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/reference/swarm/" class=""> swarm </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../swarm/status-code-comparison-to-docker/" class=""> API response codes </a>
    </li>



    <li class="leaf ">
        <a href="../../../../swarm/swarm-api/" class=""> Docker Swarm API </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker Registry</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../registry/" class=""> Registry Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/introduction/" class=""> Understanding the Registry </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/deploying/" class=""> Deploying a registry server </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/configuration/" class=""> Configuring a registry </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/notifications/" class=""> Working with notifications </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Recipes</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../registry/recipes/" class=""> Recipes Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/recipes/apache/" class=""> Authenticating proxy with apache </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/recipes/nginx/" class=""> Authenticating proxy with nginx </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/recipes/mirror/" class=""> Mirroring Docker Hub </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/recipes/osx-setup-guide/" class=""> Running on OS X </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Reference</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../registry/spec/" class=""> Reference Overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/spec/api/" class=""> HTTP API V2 </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/spec/manifest-v2-1/" class=""> Image Manifest V 2, Schema 1  </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/spec/manifest-v2-2/" class=""> Image Manifest V 2, Schema 2  </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/garbage-collection/" class=""> Garbage Collection </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/insecure/" class=""> Testing an insecure registry </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/deprecated/" class=""> Deprecated Features </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/compatibility/" class=""> Compatibility </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/spec/auth/" class=""> Docker Registry Token Authentication </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/spec/auth/jwt/" class=""> Token Authentication Implementation </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/spec/auth/oauth/" class=""> Oauth2 Token Authentication </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/spec/auth/scope/" class=""> Token Scope Documentation </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/spec/auth/token/" class=""> Token Authentication Specification </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Storage Drivers</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../registry/storage-drivers/" class=""> Storage Driver overview </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/storage-drivers/oss/" class=""> Aliyun OSS storage driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/storage-drivers/filesystem/" class=""> Filesystem storage driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/storage-drivers/gcs/" class=""> GCS storage driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/storage-drivers/inmemory/" class=""> In-memory storage driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/storage-drivers/azure/" class=""> Microsoft Azure storage driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/storage-drivers/s3/" class=""> S3 storage driver </a>
    </li>



    <li class="leaf ">
        <a href="../../../../registry/storage-drivers/swift/" class=""> Swift storage driver </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../registry/help/" class=""> Getting help </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docker Notary</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../notary/getting_started/" class=""> Getting started with Notary </a>
    </li>



    <li class="leaf ">
        <a href="../../../../notary/advanced_usage/" class=""> Use the Notary client </a>
    </li>



    <li class="leaf ">
        <a href="../../../../notary/service_architecture/" class=""> Understand the service architecture </a>
    </li>



    <li class="leaf ">
        <a href="../../../../notary/running_a_service/" class=""> Running a Notary service </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Notary Configuration</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../notary/reference/server-config/" class=""> Server Configuration </a>
    </li>



    <li class="leaf ">
        <a href="../../../../notary/reference/signer-config/" class=""> Signer Configuration </a>
    </li>



    <li class="leaf ">
        <a href="../../../../notary/reference/client-config/" class=""> Client Configuration </a>
    </li>



    <li class="leaf ">
        <a href="../../../../notary/reference/common-configs/" class=""> Common Server and Signer Configurations </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../notary/changelog/" class=""> Notary Changelog </a>
    </li>


</ul>

    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Open Source at Docker</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../opensource/code/" class=""> Quickstart contribution </a>
    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Set up for Engine Development</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../opensource/project/who-written-for/" class=""> README first </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/project/software-required/" class=""> Get the required software </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/project/software-req-win/" class=""> Set up for development on Windows </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/project/set-up-git/" class=""> Configure Git for contributing </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/project/set-up-dev-env/" class=""> Work with a development container </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/project/test-and-docs/" class=""> Run tests and test documentation </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Contribution workflow</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../opensource/workflow/make-a-contribution/" class=""> Understand how to contribute </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/workflow/find-an-issue/" class=""> Find and claim an issue </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/workflow/work-issue/" class=""> Work on your issue </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/workflow/create-pr/" class=""> Create a pull request (PR) </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/workflow/review-pr/" class=""> Participate in the PR review </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/workflow/advanced-contributing/" class=""> Advanced contributing </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/workflow/coding-style/" class=""> Coding style checklist </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Other ways to contribute</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../opensource/ways/meetups/" class=""> Organize a Docker Meetup </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/ways/issues/" class=""> Organize our issues </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/ways/community/" class=""> Support the community </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/ways/test/" class=""> Testing contributions </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Contribute to Kitematic</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../opensource/kitematic/get_started/" class=""> Get started </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/kitematic/find_issue/" class=""> Find an issue </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/kitematic/set_up_dev/" class=""> Set up for Kitematic development </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/kitematic/work_issue/" class=""> Develop in Kitematic (work on an issue) </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/kitematic/create_pr/" class=""> Create a pull request (PR) </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/kitematic/next_steps/" class=""> Where to learn more </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Governance</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../opensource/governance/dgab-info/" class=""> Docker Governance Advisory Board </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/governance/board-profiles/" class=""> Board member profiles </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/governance/conduct-code/" class=""> Code of conduct </a>
    </li>


</ul>

    </li>



    <li class="leaf ">
        <a href="../../../../opensource/FAQ/" class=""> FAQ for contributors </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/get-help/" class=""> Where to chat or get help </a>
    </li>



    <li class="leaf ">
        <a href="../../../../opensource/doc-style/" class=""> Style guide for Docker documentation </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  About</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="../../../../release-notes/" class=""> Docker Release Notes </a>
    </li>



    <li class="leaf ">
        <a href="../../../../engine/reference/glossary/" class=""> Docker Glossary </a>
    </li>


</ul>

    </li>



    <li class="leaf   menu-closed  ">
        <a href="" class="expand-menu "><span class="menu-icon" aria-hidden="true"></span>  Docs archive</a>
        
<ul class="nav-sub">


    <li class="leaf ">
        <a href="http://docs.docker.com/v1.11/" class=""> Version 1.11 </a>
    </li>



    <li class="leaf ">
        <a href="http://docs.docker.com/v1.10/" class=""> Version 1.10 </a>
    </li>



    <li class="leaf ">
        <a href="http://docs.docker.com/v1.9/" class=""> Version 1.9 </a>
    </li>



    <li class="leaf ">
        <a href="http://docs.docker.com/v1.8/" class=""> Version 1.8 </a>
    </li>



    <li class="leaf ">
        <a href="http://docs.docker.com/v1.7/" class=""> Version 1.7 </a>
    </li>



    <li class="leaf ">
        <a href="http://docs.docker.com/v1.6/" class=""> Version 1.6 </a>
    </li>



    <li class="leaf ">
        <a href="http://docs.docker.com/v1.5/" class=""> Version 1.5 </a>
    </li>



    <li class="leaf ">
        <a href="http://docs.docker.com/v1.4/" class=""> Version 1.4 </a>
    </li>


</ul>

    </li>


</ul>

</div>

            </div>
            <div class="col-xs-12 col-sm-9 col-md-8">
                <section class="section" id="DocumentationText">


	
	
		
	


                    

<h1 id="docker-remote-api-v1-22">Docker Remote API v1.22</h1>

<h2 id="1-brief-introduction">1. Brief introduction</h2>

<ul>
<li>The Remote API has replaced <code>rcli</code>.</li>
<li>The daemon listens on <code>unix:///var/run/docker.sock</code> but you can
<a href="../../../../engine/reference/commandline/dockerd/#bind-docker-to-another-host-port-or-a-unix-socket">Bind Docker to another host/port or a Unix socket</a>.</li>
<li>The API tends to be REST. However, for some complex commands, like <code>attach</code>
or <code>pull</code>, the HTTP connection is hijacked to transport <code>stdout</code>,
<code>stdin</code> and <code>stderr</code>.</li>
<li>When the client API version is newer than the daemon&rsquo;s, these calls return an HTTP
<code>400 Bad Request</code> error message.</li>
</ul>

<h1 id="2-endpoints">2. Endpoints</h1>

<h2 id="2-1-containers">2.1 Containers</h2>

<h3 id="list-containers">List containers</h3>

<p><code>GET /containers/json</code></p>

<p>List containers</p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /containers/json?all=1&amp;before=8dfafdbc3a40&amp;size=1 HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

[
     {
             &quot;Id&quot;: &quot;8dfafdbc3a40&quot;,
             &quot;Names&quot;:[&quot;/boring_feynman&quot;],
             &quot;Image&quot;: &quot;ubuntu:latest&quot;,
             &quot;ImageID&quot;: &quot;d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82&quot;,
             &quot;Command&quot;: &quot;echo 1&quot;,
             &quot;Created&quot;: 1367854155,
             &quot;Status&quot;: &quot;Exit 0&quot;,
             &quot;Ports&quot;: [{&quot;PrivatePort&quot;: 2222, &quot;PublicPort&quot;: 3333, &quot;Type&quot;: &quot;tcp&quot;}],
             &quot;Labels&quot;: {
                     &quot;com.example.vendor&quot;: &quot;Acme&quot;,
                     &quot;com.example.license&quot;: &quot;GPL&quot;,
                     &quot;com.example.version&quot;: &quot;1.0&quot;
             },
             &quot;SizeRw&quot;: 12288,
             &quot;SizeRootFs&quot;: 0,
             &quot;HostConfig&quot;: {
                     &quot;NetworkMode&quot;: &quot;default&quot;
             },
             &quot;NetworkSettings&quot;: {
                     &quot;Networks&quot;: {
                             &quot;bridge&quot;: {
                                      &quot;IPAMConfig&quot;: null,
                                      &quot;Links&quot;: null,
                                      &quot;Aliases&quot;: null,
                                      &quot;NetworkID&quot;: &quot;7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812&quot;,
                                      &quot;EndpointID&quot;: &quot;2cdc4edb1ded3631c81f57966563e5c8525b81121bb3706a9a9a3ae102711f3f&quot;,
                                      &quot;Gateway&quot;: &quot;172.17.0.1&quot;,
                                      &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,
                                      &quot;IPPrefixLen&quot;: 16,
                                      &quot;IPv6Gateway&quot;: &quot;&quot;,
                                      &quot;GlobalIPv6Address&quot;: &quot;&quot;,
                                      &quot;GlobalIPv6PrefixLen&quot;: 0,
                                      &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;
                              }
                     }
             }
     },
     {
             &quot;Id&quot;: &quot;9cd87474be90&quot;,
             &quot;Names&quot;:[&quot;/coolName&quot;],
             &quot;Image&quot;: &quot;ubuntu:latest&quot;,
             &quot;ImageID&quot;: &quot;d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82&quot;,
             &quot;Command&quot;: &quot;echo 222222&quot;,
             &quot;Created&quot;: 1367854155,
             &quot;Status&quot;: &quot;Exit 0&quot;,
             &quot;Ports&quot;: [],
             &quot;Labels&quot;: {},
             &quot;SizeRw&quot;: 12288,
             &quot;SizeRootFs&quot;: 0,
             &quot;HostConfig&quot;: {
                     &quot;NetworkMode&quot;: &quot;default&quot;
             },
             &quot;NetworkSettings&quot;: {
                     &quot;Networks&quot;: {
                             &quot;bridge&quot;: {
                                      &quot;IPAMConfig&quot;: null,
                                      &quot;Links&quot;: null,
                                      &quot;Aliases&quot;: null,
                                      &quot;NetworkID&quot;: &quot;7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812&quot;,
                                      &quot;EndpointID&quot;: &quot;88eaed7b37b38c2a3f0c4bc796494fdf51b270c2d22656412a2ca5d559a64d7a&quot;,
                                      &quot;Gateway&quot;: &quot;172.17.0.1&quot;,
                                      &quot;IPAddress&quot;: &quot;172.17.0.8&quot;,
                                      &quot;IPPrefixLen&quot;: 16,
                                      &quot;IPv6Gateway&quot;: &quot;&quot;,
                                      &quot;GlobalIPv6Address&quot;: &quot;&quot;,
                                      &quot;GlobalIPv6PrefixLen&quot;: 0,
                                      &quot;MacAddress&quot;: &quot;02:42:ac:11:00:08&quot;
                              }
                     }
             }
     },
     {
             &quot;Id&quot;: &quot;3176a2479c92&quot;,
             &quot;Names&quot;:[&quot;/sleepy_dog&quot;],
             &quot;Image&quot;: &quot;ubuntu:latest&quot;,
             &quot;ImageID&quot;: &quot;d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82&quot;,
             &quot;Command&quot;: &quot;echo 3333333333333333&quot;,
             &quot;Created&quot;: 1367854154,
             &quot;Status&quot;: &quot;Exit 0&quot;,
             &quot;Ports&quot;:[],
             &quot;Labels&quot;: {},
             &quot;SizeRw&quot;:12288,
             &quot;SizeRootFs&quot;:0,
             &quot;HostConfig&quot;: {
                     &quot;NetworkMode&quot;: &quot;default&quot;
             },
             &quot;NetworkSettings&quot;: {
                     &quot;Networks&quot;: {
                             &quot;bridge&quot;: {
                                      &quot;IPAMConfig&quot;: null,
                                      &quot;Links&quot;: null,
                                      &quot;Aliases&quot;: null,
                                      &quot;NetworkID&quot;: &quot;7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812&quot;,
                                      &quot;EndpointID&quot;: &quot;8b27c041c30326d59cd6e6f510d4f8d1d570a228466f956edf7815508f78e30d&quot;,
                                      &quot;Gateway&quot;: &quot;172.17.0.1&quot;,
                                      &quot;IPAddress&quot;: &quot;172.17.0.6&quot;,
                                      &quot;IPPrefixLen&quot;: 16,
                                      &quot;IPv6Gateway&quot;: &quot;&quot;,
                                      &quot;GlobalIPv6Address&quot;: &quot;&quot;,
                                      &quot;GlobalIPv6PrefixLen&quot;: 0,
                                      &quot;MacAddress&quot;: &quot;02:42:ac:11:00:06&quot;
                              }
                     }
             }
     },
     {
             &quot;Id&quot;: &quot;4cb07b47f9fb&quot;,
             &quot;Names&quot;:[&quot;/running_cat&quot;],
             &quot;Image&quot;: &quot;ubuntu:latest&quot;,
             &quot;ImageID&quot;: &quot;d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82&quot;,
             &quot;Command&quot;: &quot;echo 444444444444444444444444444444444&quot;,
             &quot;Created&quot;: 1367854152,
             &quot;Status&quot;: &quot;Exit 0&quot;,
             &quot;Ports&quot;: [],
             &quot;Labels&quot;: {},
             &quot;SizeRw&quot;: 12288,
             &quot;SizeRootFs&quot;: 0,
             &quot;HostConfig&quot;: {
                     &quot;NetworkMode&quot;: &quot;default&quot;
             },
             &quot;NetworkSettings&quot;: {
                     &quot;Networks&quot;: {
                             &quot;bridge&quot;: {
                                      &quot;IPAMConfig&quot;: null,
                                      &quot;Links&quot;: null,
                                      &quot;Aliases&quot;: null,
                                      &quot;NetworkID&quot;: &quot;7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812&quot;,
                                      &quot;EndpointID&quot;: &quot;d91c7b2f0644403d7ef3095985ea0e2370325cd2332ff3a3225c4247328e66e9&quot;,
                                      &quot;Gateway&quot;: &quot;172.17.0.1&quot;,
                                      &quot;IPAddress&quot;: &quot;172.17.0.5&quot;,
                                      &quot;IPPrefixLen&quot;: 16,
                                      &quot;IPv6Gateway&quot;: &quot;&quot;,
                                      &quot;GlobalIPv6Address&quot;: &quot;&quot;,
                                      &quot;GlobalIPv6PrefixLen&quot;: 0,
                                      &quot;MacAddress&quot;: &quot;02:42:ac:11:00:05&quot;
                              }
                     }
             }
     }
]
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>all</strong> – 1/True/true or 0/False/false, Show all containers.
    Only running containers are shown by default (i.e., this defaults to false)</li>
<li><strong>limit</strong> – Show <code>limit</code> last created
    containers, include non-running ones.</li>
<li><strong>since</strong> – Show only containers created since Id, include
    non-running ones.</li>
<li><strong>before</strong> – Show only containers created before Id, include
    non-running ones.</li>
<li><strong>size</strong> – 1/True/true or 0/False/false, Show the containers
    sizes</li>
<li><strong>filters</strong> - a JSON encoded value of the filters (a <code>map[string][]string</code>) to process on the containers list. Available filters:

<ul>
<li><code>exited=&lt;int&gt;</code>; -- containers with exit code of  <code>&lt;int&gt;</code> ;</li>
<li><code>status=</code>(<code>created</code>|<code>restarting</code>|<code>running</code>|<code>paused</code>|<code>exited</code>|<code>dead</code>)</li>
<li><code>label=key</code> or <code>label=&quot;key=value&quot;</code> of a container label</li>
<li><code>isolation=</code>(<code>default</code>|<code>process</code>|<code>hyperv</code>)   (Windows daemon only)</li>
</ul></li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>400</strong> – bad parameter</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="create-a-container">Create a container</h3>

<p><code>POST /containers/create</code></p>

<p>Create a container</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/create HTTP/1.1
Content-Type: application/json

{
       &quot;Hostname&quot;: &quot;&quot;,
       &quot;Domainname&quot;: &quot;&quot;,
       &quot;User&quot;: &quot;&quot;,
       &quot;AttachStdin&quot;: false,
       &quot;AttachStdout&quot;: true,
       &quot;AttachStderr&quot;: true,
       &quot;Tty&quot;: false,
       &quot;OpenStdin&quot;: false,
       &quot;StdinOnce&quot;: false,
       &quot;Env&quot;: [
               &quot;FOO=bar&quot;,
               &quot;BAZ=quux&quot;
       ],
       &quot;Cmd&quot;: [
               &quot;date&quot;
       ],
       &quot;Entrypoint&quot;: null,
       &quot;Image&quot;: &quot;ubuntu&quot;,
       &quot;Labels&quot;: {
               &quot;com.example.vendor&quot;: &quot;Acme&quot;,
               &quot;com.example.license&quot;: &quot;GPL&quot;,
               &quot;com.example.version&quot;: &quot;1.0&quot;
       },
       &quot;Volumes&quot;: {
         &quot;/volumes/data&quot;: {}
       },
       &quot;WorkingDir&quot;: &quot;&quot;,
       &quot;NetworkDisabled&quot;: false,
       &quot;MacAddress&quot;: &quot;12:34:56:78:9a:bc&quot;,
       &quot;ExposedPorts&quot;: {
               &quot;22/tcp&quot;: {}
       },
       &quot;StopSignal&quot;: &quot;SIGTERM&quot;,
       &quot;HostConfig&quot;: {
         &quot;Binds&quot;: [&quot;/tmp:/tmp&quot;],
         &quot;Links&quot;: [&quot;redis3:redis&quot;],
         &quot;Memory&quot;: 0,
         &quot;MemorySwap&quot;: 0,
         &quot;MemoryReservation&quot;: 0,
         &quot;KernelMemory&quot;: 0,
         &quot;CpuShares&quot;: 512,
         &quot;CpuPeriod&quot;: 100000,
         &quot;CpuQuota&quot;: 50000,
         &quot;CpusetCpus&quot;: &quot;0,1&quot;,
         &quot;CpusetMems&quot;: &quot;0,1&quot;,
         &quot;BlkioWeight&quot;: 300,
         &quot;BlkioWeightDevice&quot;: [{}],
         &quot;BlkioDeviceReadBps&quot;: [{}],
         &quot;BlkioDeviceReadIOps&quot;: [{}],
         &quot;BlkioDeviceWriteBps&quot;: [{}],
         &quot;BlkioDeviceWriteIOps&quot;: [{}],
         &quot;MemorySwappiness&quot;: 60,
         &quot;OomKillDisable&quot;: false,
         &quot;OomScoreAdj&quot;: 500,
         &quot;PidMode&quot;: &quot;&quot;,
         &quot;PortBindings&quot;: { &quot;22/tcp&quot;: [{ &quot;HostPort&quot;: &quot;11022&quot; }] },
         &quot;PublishAllPorts&quot;: false,
         &quot;Privileged&quot;: false,
         &quot;ReadonlyRootfs&quot;: false,
         &quot;Dns&quot;: [&quot;8.8.8.8&quot;],
         &quot;DnsOptions&quot;: [&quot;&quot;],
         &quot;DnsSearch&quot;: [&quot;&quot;],
         &quot;ExtraHosts&quot;: null,
         &quot;VolumesFrom&quot;: [&quot;parent&quot;, &quot;other:ro&quot;],
         &quot;CapAdd&quot;: [&quot;NET_ADMIN&quot;],
         &quot;CapDrop&quot;: [&quot;MKNOD&quot;],
         &quot;GroupAdd&quot;: [&quot;newgroup&quot;],
         &quot;RestartPolicy&quot;: { &quot;Name&quot;: &quot;&quot;, &quot;MaximumRetryCount&quot;: 0 },
         &quot;NetworkMode&quot;: &quot;bridge&quot;,
         &quot;Devices&quot;: [],
         &quot;Ulimits&quot;: [{}],
         &quot;LogConfig&quot;: { &quot;Type&quot;: &quot;json-file&quot;, &quot;Config&quot;: {} },
         &quot;SecurityOpt&quot;: [],
         &quot;CgroupParent&quot;: &quot;&quot;,
         &quot;VolumeDriver&quot;: &quot;&quot;,
         &quot;ShmSize&quot;: 67108864
      },
      &quot;NetworkingConfig&quot;: {
          &quot;EndpointsConfig&quot;: {
              &quot;isolated_nw&quot; : {
                  &quot;IPAMConfig&quot;: {
                      &quot;IPv4Address&quot;:&quot;172.20.30.33&quot;,
                      &quot;IPv6Address&quot;:&quot;2001:db8:abcd::3033&quot;
                  },
                  &quot;Links&quot;:[&quot;container_1&quot;, &quot;container_2&quot;],
                  &quot;Aliases&quot;:[&quot;server_x&quot;, &quot;server_y&quot;]
              }
          }
      }
  }
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>  HTTP/1.1 201 Created
  Content-Type: application/json

  {
       &quot;Id&quot;:&quot;e90e34656806&quot;,
       &quot;Warnings&quot;:[]
  }
</code></pre>

<p><strong>JSON parameters</strong>:</p>

<ul>
<li><strong>Hostname</strong> - A string value containing the hostname to use for the
  container.</li>
<li><strong>Domainname</strong> - A string value containing the domain name to use
  for the container.</li>
<li><strong>User</strong> - A string value specifying the user inside the container.</li>
<li><strong>AttachStdin</strong> - Boolean value, attaches to <code>stdin</code>.</li>
<li><strong>AttachStdout</strong> - Boolean value, attaches to <code>stdout</code>.</li>
<li><strong>AttachStderr</strong> - Boolean value, attaches to <code>stderr</code>.</li>
<li><strong>Tty</strong> - Boolean value, Attach standard streams to a <code>tty</code>, including <code>stdin</code> if it is not closed.</li>
<li><strong>OpenStdin</strong> - Boolean value, opens <code>stdin</code>,</li>
<li><strong>StdinOnce</strong> - Boolean value, close <code>stdin</code> after the 1 attached client disconnects.</li>
<li><strong>Env</strong> - A list of environment variables in the form of <code>[&quot;VAR=value&quot;[,&quot;VAR2=value2&quot;]]</code></li>
<li><strong>Labels</strong> - Adds a map of labels to a container. To specify a map: <code>{&quot;key&quot;:&quot;value&quot;[,&quot;key2&quot;:&quot;value2&quot;]}</code></li>
<li><strong>Cmd</strong> - Command to run specified as a string or an array of strings.</li>
<li><strong>Entrypoint</strong> - Set the entry point for the container as a string or an array
  of strings.</li>
<li><strong>Image</strong> - A string specifying the image name to use for the container.</li>
<li><strong>Volumes</strong> - An object mapping mount point paths (strings) inside the
  container to empty objects.</li>
<li><strong>WorkingDir</strong> - A string specifying the working directory for commands to
  run in.</li>
<li><strong>NetworkDisabled</strong> - Boolean value, when true disables networking for the
  container</li>
<li><strong>ExposedPorts</strong> - An object mapping ports to an empty object in the form of:
  <code>&quot;ExposedPorts&quot;: { &quot;&lt;port&gt;/&lt;tcp|udp&gt;: {}&quot; }</code></li>
<li><strong>StopSignal</strong> - Signal to stop a container as a string or unsigned integer. <code>SIGTERM</code> by default.</li>
<li><strong>HostConfig</strong>

<ul>
<li><strong>Binds</strong> – A list of volume bindings for this container. Each volume binding is a string in one of these forms:

<ul>
<li><code>host_path:container_path</code> to bind-mount a host path into the container</li>
<li><code>host_path:container_path:ro</code> to make the bind-mount read-only inside the container.</li>
<li><code>volume_name:container_path</code> to bind-mount a volume managed by a volume plugin into the container.</li>
<li><code>volume_name:container_path:ro</code> to make the bind mount read-only inside the container.</li>
</ul></li>
<li><strong>Links</strong> - A list of links for the container. Each link entry should be
  in the form of <code>container_name:alias</code>.</li>
<li><strong>Memory</strong> - Memory limit in bytes.</li>
<li><strong>MemorySwap</strong> - Total memory limit (memory + swap); set <code>-1</code> to enable unlimited swap.
  You must use this with <code>memory</code> and make the swap value larger than <code>memory</code>.</li>
<li><strong>MemoryReservation</strong> - Memory soft limit in bytes.</li>
<li><strong>KernelMemory</strong> - Kernel memory limit in bytes.</li>
<li><strong>CpuShares</strong> - An integer value containing the container&rsquo;s CPU Shares
  (ie. the relative weight vs other containers).</li>
<li><strong>CpuPeriod</strong> - The length of a CPU period in microseconds.</li>
<li><strong>CpuQuota</strong> - Microseconds of CPU time that the container can get in a CPU period.</li>
<li><strong>CpusetCpus</strong> - String value containing the <code>cgroups CpusetCpus</code> to use.</li>
<li><strong>CpusetMems</strong> - Memory nodes (MEMs) in which to allow execution (0-3, 0,1). Only effective on NUMA systems.</li>
<li><strong>BlkioWeight</strong> - Block IO weight (relative weight) accepts a weight value between 10 and 1000.</li>
<li><strong>BlkioWeightDevice</strong> - Block IO weight (relative device weight) in the form of:        <code>&quot;BlkioWeightDevice&quot;: [{&quot;Path&quot;: &quot;device_path&quot;, &quot;Weight&quot;: weight}]</code></li>
<li><strong>BlkioDeviceReadBps</strong> - Limit read rate (bytes per second) from a device in the form of:   <code>&quot;BlkioDeviceReadBps&quot;: [{&quot;Path&quot;: &quot;device_path&quot;, &quot;Rate&quot;: rate}]</code>, for example:
<code>&quot;BlkioDeviceReadBps&quot;: [{&quot;Path&quot;: &quot;/dev/sda&quot;, &quot;Rate&quot;: &quot;1024&quot;}]&quot;</code></li>
<li><strong>BlkioDeviceWriteBps</strong> - Limit write rate (bytes per second) to a device in the form of:   <code>&quot;BlkioDeviceWriteBps&quot;: [{&quot;Path&quot;: &quot;device_path&quot;, &quot;Rate&quot;: rate}]</code>, for example:
<code>&quot;BlkioDeviceWriteBps&quot;: [{&quot;Path&quot;: &quot;/dev/sda&quot;, &quot;Rate&quot;: &quot;1024&quot;}]&quot;</code></li>
<li><strong>BlkioDeviceReadIOps</strong> - Limit read rate (IO per second) from a device in the form of: <code>&quot;BlkioDeviceReadIOps&quot;: [{&quot;Path&quot;: &quot;device_path&quot;, &quot;Rate&quot;: rate}]</code>, for example:
<code>&quot;BlkioDeviceReadIOps&quot;: [{&quot;Path&quot;: &quot;/dev/sda&quot;, &quot;Rate&quot;: &quot;1000&quot;}]</code></li>
<li><strong>BlkioDeviceWiiteIOps</strong> - Limit write rate (IO per second) to a device in the form of: <code>&quot;BlkioDeviceWriteIOps&quot;: [{&quot;Path&quot;: &quot;device_path&quot;, &quot;Rate&quot;: rate}]</code>, for example:
<code>&quot;BlkioDeviceWriteIOps&quot;: [{&quot;Path&quot;: &quot;/dev/sda&quot;, &quot;Rate&quot;: &quot;1000&quot;}]</code></li>
<li><strong>MemorySwappiness</strong> - Tune a container&rsquo;s memory swappiness behavior. Accepts an integer between 0 and 100.</li>
<li><strong>OomKillDisable</strong> - Boolean value, whether to disable OOM Killer for the container or not.</li>
<li><strong>OomScoreAdj</strong> - An integer value containing the score given to the container in order to tune OOM killer preferences.</li>
<li><strong>PidMode</strong> - Set the PID (Process) Namespace mode for the container;
  <code>&quot;container:&lt;name|id&gt;&quot;</code>: joins another container&rsquo;s PID namespace
  <code>&quot;host&quot;</code>: use the host&rsquo;s PID namespace inside the container</li>
<li><strong>PortBindings</strong> - A map of exposed container ports and the host port they
  should map to. A JSON object in the form
  <code>{ &lt;port&gt;/&lt;protocol&gt;: [{ &quot;HostPort&quot;: &quot;&lt;port&gt;&quot; }] }</code>
  Take note that <code>port</code> is specified as a string and not an integer value.</li>
<li><strong>PublishAllPorts</strong> - Allocates a random host port for all of a container&rsquo;s
  exposed ports. Specified as a boolean value.</li>
<li><strong>Privileged</strong> - Gives the container full access to the host. Specified as
  a boolean value.</li>
<li><strong>ReadonlyRootfs</strong> - Mount the container&rsquo;s root filesystem as read only.
  Specified as a boolean value.</li>
<li><strong>Dns</strong> - A list of DNS servers for the container to use.</li>
<li><strong>DnsOptions</strong> - A list of DNS options</li>
<li><strong>DnsSearch</strong> - A list of DNS search domains</li>
<li><strong>ExtraHosts</strong> - A list of hostnames/IP mappings to add to the
container&rsquo;s <code>/etc/hosts</code> file. Specified in the form <code>[&quot;hostname:IP&quot;]</code>.</li>
<li><strong>VolumesFrom</strong> - A list of volumes to inherit from another container.
  Specified in the form <code>&lt;container name&gt;[:&lt;ro|rw&gt;]</code></li>
<li><strong>CapAdd</strong> - A list of kernel capabilities to add to the container.</li>
<li><strong>Capdrop</strong> - A list of kernel capabilities to drop from the container.</li>
<li><strong>GroupAdd</strong> - A list of additional groups that the container process will run as</li>
<li><strong>RestartPolicy</strong> – The behavior to apply when the container exits.  The
    value is an object with a <code>Name</code> property of either <code>&quot;always&quot;</code> to
    always restart, <code>&quot;unless-stopped&quot;</code> to restart always except when
    user has manually stopped the container or <code>&quot;on-failure&quot;</code> to restart only when the container
    exit code is non-zero.  If <code>on-failure</code> is used, <code>MaximumRetryCount</code>
    controls the number of times to retry before giving up.
    The default is not to restart. (optional)
    An ever increasing delay (double the previous delay, starting at 100mS)
    is added before each restart to prevent flooding the server.</li>
<li><strong>NetworkMode</strong> - Sets the networking mode for the container. Supported
  standard values are: <code>bridge</code>, <code>host</code>, <code>none</code>, and <code>container:&lt;name|id&gt;</code>. Any other value is taken
  as a custom network&rsquo;s name to which this container should connect to.</li>
<li><strong>Devices</strong> - A list of devices to add to the container specified as a JSON object in the
form
  <code>{ &quot;PathOnHost&quot;: &quot;/dev/deviceName&quot;, &quot;PathInContainer&quot;: &quot;/dev/deviceName&quot;, &quot;CgroupPermissions&quot;: &quot;mrw&quot;}</code></li>
<li><strong>Ulimits</strong> - A list of ulimits to set in the container, specified as
  <code>{ &quot;Name&quot;: &lt;name&gt;, &quot;Soft&quot;: &lt;soft limit&gt;, &quot;Hard&quot;: &lt;hard limit&gt; }</code>, for example:
  <code>Ulimits: { &quot;Name&quot;: &quot;nofile&quot;, &quot;Soft&quot;: 1024, &quot;Hard&quot;: 2048 }</code></li>
<li><strong>SecurityOpt</strong>: A list of string values to customize labels for MLS
systems, such as SELinux.</li>
<li><strong>LogConfig</strong> - Log configuration for the container, specified as a JSON object in the form
  <code>{ &quot;Type&quot;: &quot;&lt;driver_name&gt;&quot;, &quot;Config&quot;: {&quot;key1&quot;: &quot;val1&quot;}}</code>.
  Available types: <code>json-file</code>, <code>syslog</code>, <code>journald</code>, <code>gelf</code>, <code>awslogs</code>, <code>splunk</code>, <code>none</code>.
  <code>json-file</code> logging driver.</li>
<li><strong>CgroupParent</strong> - Path to <code>cgroups</code> under which the container&rsquo;s <code>cgroup</code> is created. If the path is not absolute, the path is considered to be relative to the <code>cgroups</code> path of the init process. Cgroups are created if they do not already exist.</li>
<li><strong>VolumeDriver</strong> - Driver that this container users to mount volumes.</li>
<li><strong>ShmSize</strong> - Size of <code>/dev/shm</code> in bytes. The size must be greater than 0.  If omitted the system uses 64MB.</li>
</ul></li>
</ul>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>name</strong> – Assign the specified name to the container. Must
match <code>/?[a-zA-Z0-9_-]+</code>.</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>201</strong> – no error</li>
<li><strong>400</strong> – bad parameter</li>
<li><strong>404</strong> – no such container</li>
<li><strong>406</strong> – impossible to attach (container not running)</li>
<li><strong>409</strong> – conflict</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="inspect-a-container">Inspect a container</h3>

<p><code>GET /containers/(id or name)/json</code></p>

<p>Return low-level information on the container <code>id</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>  GET /containers/4fa6e0f0c678/json HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{
    &quot;AppArmorProfile&quot;: &quot;&quot;,
    &quot;Args&quot;: [
        &quot;-c&quot;,
        &quot;exit 9&quot;
    ],
    &quot;Config&quot;: {
        &quot;AttachStderr&quot;: true,
        &quot;AttachStdin&quot;: false,
        &quot;AttachStdout&quot;: true,
        &quot;Cmd&quot;: [
            &quot;/bin/sh&quot;,
            &quot;-c&quot;,
            &quot;exit 9&quot;
        ],
        &quot;Domainname&quot;: &quot;&quot;,
        &quot;Entrypoint&quot;: null,
        &quot;Env&quot;: [
            &quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;
        ],
        &quot;ExposedPorts&quot;: null,
        &quot;Hostname&quot;: &quot;ba033ac44011&quot;,
        &quot;Image&quot;: &quot;ubuntu&quot;,
        &quot;Labels&quot;: {
            &quot;com.example.vendor&quot;: &quot;Acme&quot;,
            &quot;com.example.license&quot;: &quot;GPL&quot;,
            &quot;com.example.version&quot;: &quot;1.0&quot;
        },
        &quot;MacAddress&quot;: &quot;&quot;,
        &quot;NetworkDisabled&quot;: false,
        &quot;OnBuild&quot;: null,
        &quot;OpenStdin&quot;: false,
        &quot;StdinOnce&quot;: false,
        &quot;Tty&quot;: false,
        &quot;User&quot;: &quot;&quot;,
        &quot;Volumes&quot;: {
            &quot;/volumes/data&quot;: {}
        },
        &quot;WorkingDir&quot;: &quot;&quot;,
        &quot;StopSignal&quot;: &quot;SIGTERM&quot;
    },
    &quot;Created&quot;: &quot;2015-01-06T15:47:31.485331387Z&quot;,
    &quot;Driver&quot;: &quot;devicemapper&quot;,
    &quot;ExecIDs&quot;: null,
    &quot;HostConfig&quot;: {
        &quot;Binds&quot;: null,
        &quot;BlkioWeight&quot;: 0,
        &quot;BlkioWeightDevice&quot;: [{}],
        &quot;BlkioDeviceReadBps&quot;: [{}],
        &quot;BlkioDeviceWriteBps&quot;: [{}],
        &quot;BlkioDeviceReadIOps&quot;: [{}],
        &quot;BlkioDeviceWriteIOps&quot;: [{}],
        &quot;CapAdd&quot;: null,
        &quot;CapDrop&quot;: null,
        &quot;ContainerIDFile&quot;: &quot;&quot;,
        &quot;CpusetCpus&quot;: &quot;&quot;,
        &quot;CpusetMems&quot;: &quot;&quot;,
        &quot;CpuShares&quot;: 0,
        &quot;CpuPeriod&quot;: 100000,
        &quot;Devices&quot;: [],
        &quot;Dns&quot;: null,
        &quot;DnsOptions&quot;: null,
        &quot;DnsSearch&quot;: null,
        &quot;ExtraHosts&quot;: null,
        &quot;IpcMode&quot;: &quot;&quot;,
        &quot;Links&quot;: null,
        &quot;LxcConf&quot;: [],
        &quot;Memory&quot;: 0,
        &quot;MemorySwap&quot;: 0,
        &quot;MemoryReservation&quot;: 0,
        &quot;KernelMemory&quot;: 0,
        &quot;OomKillDisable&quot;: false,
        &quot;OomScoreAdj&quot;: 500,
        &quot;NetworkMode&quot;: &quot;bridge&quot;,
        &quot;PidMode&quot;: &quot;&quot;,
        &quot;PortBindings&quot;: {},
        &quot;Privileged&quot;: false,
        &quot;ReadonlyRootfs&quot;: false,
        &quot;PublishAllPorts&quot;: false,
        &quot;RestartPolicy&quot;: {
            &quot;MaximumRetryCount&quot;: 2,
            &quot;Name&quot;: &quot;on-failure&quot;
        },
        &quot;LogConfig&quot;: {
            &quot;Config&quot;: null,
            &quot;Type&quot;: &quot;json-file&quot;
        },
        &quot;SecurityOpt&quot;: null,
        &quot;VolumesFrom&quot;: null,
        &quot;Ulimits&quot;: [{}],
        &quot;VolumeDriver&quot;: &quot;&quot;,
        &quot;ShmSize&quot;: 67108864
    },
    &quot;HostnamePath&quot;: &quot;/var/lib/docker/containers/ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39/hostname&quot;,
    &quot;HostsPath&quot;: &quot;/var/lib/docker/containers/ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39/hosts&quot;,
    &quot;LogPath&quot;: &quot;/var/lib/docker/containers/1eb5fabf5a03807136561b3c00adcd2992b535d624d5e18b6cdc6a6844d9767b/1eb5fabf5a03807136561b3c00adcd2992b535d624d5e18b6cdc6a6844d9767b-json.log&quot;,
    &quot;Id&quot;: &quot;ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39&quot;,
    &quot;Image&quot;: &quot;04c5d3b7b0656168630d3ba35d8889bd0e9caafcaeb3004d2bfbc47e7c5d35d2&quot;,
    &quot;MountLabel&quot;: &quot;&quot;,
    &quot;Name&quot;: &quot;/boring_euclid&quot;,
    &quot;NetworkSettings&quot;: {
        &quot;Bridge&quot;: &quot;&quot;,
        &quot;SandboxID&quot;: &quot;&quot;,
        &quot;HairpinMode&quot;: false,
        &quot;LinkLocalIPv6Address&quot;: &quot;&quot;,
        &quot;LinkLocalIPv6PrefixLen&quot;: 0,
        &quot;Ports&quot;: null,
        &quot;SandboxKey&quot;: &quot;&quot;,
        &quot;SecondaryIPAddresses&quot;: null,
        &quot;SecondaryIPv6Addresses&quot;: null,
        &quot;EndpointID&quot;: &quot;&quot;,
        &quot;Gateway&quot;: &quot;&quot;,
        &quot;GlobalIPv6Address&quot;: &quot;&quot;,
        &quot;GlobalIPv6PrefixLen&quot;: 0,
        &quot;IPAddress&quot;: &quot;&quot;,
        &quot;IPPrefixLen&quot;: 0,
        &quot;IPv6Gateway&quot;: &quot;&quot;,
        &quot;MacAddress&quot;: &quot;&quot;,
        &quot;Networks&quot;: {
            &quot;bridge&quot;: {
                &quot;NetworkID&quot;: &quot;7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812&quot;,
                &quot;EndpointID&quot;: &quot;7587b82f0dada3656fda26588aee72630c6fab1536d36e394b2bfbcf898c971d&quot;,
                &quot;Gateway&quot;: &quot;172.17.0.1&quot;,
                &quot;IPAddress&quot;: &quot;172.17.0.2&quot;,
                &quot;IPPrefixLen&quot;: 16,
                &quot;IPv6Gateway&quot;: &quot;&quot;,
                &quot;GlobalIPv6Address&quot;: &quot;&quot;,
                &quot;GlobalIPv6PrefixLen&quot;: 0,
                &quot;MacAddress&quot;: &quot;02:42:ac:12:00:02&quot;
            }
        }
    },
    &quot;Path&quot;: &quot;/bin/sh&quot;,
    &quot;ProcessLabel&quot;: &quot;&quot;,
    &quot;ResolvConfPath&quot;: &quot;/var/lib/docker/containers/ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39/resolv.conf&quot;,
    &quot;RestartCount&quot;: 1,
    &quot;State&quot;: {
        &quot;Error&quot;: &quot;&quot;,
        &quot;ExitCode&quot;: 9,
        &quot;FinishedAt&quot;: &quot;2015-01-06T15:47:32.080254511Z&quot;,
        &quot;OOMKilled&quot;: false,
        &quot;Dead&quot;: false,
        &quot;Paused&quot;: false,
        &quot;Pid&quot;: 0,
        &quot;Restarting&quot;: false,
        &quot;Running&quot;: true,
        &quot;StartedAt&quot;: &quot;2015-01-06T15:47:32.072697474Z&quot;,
        &quot;Status&quot;: &quot;running&quot;
    },
    &quot;Mounts&quot;: [
        {
            &quot;Name&quot;: &quot;fac362...80535&quot;,
            &quot;Source&quot;: &quot;/data&quot;,
            &quot;Destination&quot;: &quot;/data&quot;,
            &quot;Driver&quot;: &quot;local&quot;,
            &quot;Mode&quot;: &quot;ro,Z&quot;,
            &quot;RW&quot;: false,
            &quot;Propagation&quot;: &quot;&quot;
        }
    ]
}
</code></pre>

<p><strong>Example request, with size information</strong>:</p>

<pre><code>GET /containers/4fa6e0f0c678/json?size=1 HTTP/1.1
</code></pre>

<p><strong>Example response, with size information</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{
....
&quot;SizeRw&quot;: 0,
&quot;SizeRootFs&quot;: 972,
....
}
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>size</strong> – 1/True/true or 0/False/false, return container size information. Default is <code>false</code>.</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="list-processes-running-inside-a-container">List processes running inside a container</h3>

<p><code>GET /containers/(id or name)/top</code></p>

<p>List processes running inside the container <code>id</code>. On Unix systems this
is done by running the <code>ps</code> command. This endpoint is not
supported on Windows.</p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /containers/4fa6e0f0c678/top HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{
   &quot;Titles&quot; : [
     &quot;UID&quot;, &quot;PID&quot;, &quot;PPID&quot;, &quot;C&quot;, &quot;STIME&quot;, &quot;TTY&quot;, &quot;TIME&quot;, &quot;CMD&quot;
   ],
   &quot;Processes&quot; : [
     [
       &quot;root&quot;, &quot;13642&quot;, &quot;882&quot;, &quot;0&quot;, &quot;17:03&quot;, &quot;pts/0&quot;, &quot;00:00:00&quot;, &quot;/bin/bash&quot;
     ],
     [
       &quot;root&quot;, &quot;13735&quot;, &quot;13642&quot;, &quot;0&quot;, &quot;17:06&quot;, &quot;pts/0&quot;, &quot;00:00:00&quot;, &quot;sleep 10&quot;
     ]
   ]
}
</code></pre>

<p><strong>Example request</strong>:</p>

<pre><code>GET /containers/4fa6e0f0c678/top?ps_args=aux HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{
  &quot;Titles&quot; : [
    &quot;USER&quot;,&quot;PID&quot;,&quot;%CPU&quot;,&quot;%MEM&quot;,&quot;VSZ&quot;,&quot;RSS&quot;,&quot;TTY&quot;,&quot;STAT&quot;,&quot;START&quot;,&quot;TIME&quot;,&quot;COMMAND&quot;
  ]
  &quot;Processes&quot; : [
    [
      &quot;root&quot;,&quot;13642&quot;,&quot;0.0&quot;,&quot;0.1&quot;,&quot;18172&quot;,&quot;3184&quot;,&quot;pts/0&quot;,&quot;Ss&quot;,&quot;17:03&quot;,&quot;0:00&quot;,&quot;/bin/bash&quot;
    ],
    [
      &quot;root&quot;,&quot;13895&quot;,&quot;0.0&quot;,&quot;0.0&quot;,&quot;4348&quot;,&quot;692&quot;,&quot;pts/0&quot;,&quot;S+&quot;,&quot;17:15&quot;,&quot;0:00&quot;,&quot;sleep 10&quot;
    ]
  ],
}
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>ps_args</strong> – <code>ps</code> arguments to use (e.g., <code>aux</code>), defaults to <code>-ef</code></li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="get-container-logs">Get container logs</h3>

<p><code>GET /containers/(id or name)/logs</code></p>

<p>Get <code>stdout</code> and <code>stderr</code> logs from the container <code>id</code></p>

<blockquote>
<p><strong>Note</strong>:
This endpoint works only for containers with the <code>json-file</code> or <code>journald</code> logging drivers.</p>
</blockquote>

<p><strong>Example request</strong>:</p>

<pre><code> GET /containers/4fa6e0f0c678/logs?stderr=1&amp;stdout=1&amp;timestamps=1&amp;follow=1&amp;tail=10&amp;since=1428990821 HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code> HTTP/1.1 101 UPGRADED
 Content-Type: application/vnd.docker.raw-stream
 Connection: Upgrade
 Upgrade: tcp

 {{ STREAM }}
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>follow</strong> – 1/True/true or 0/False/false, return stream. Default <code>false</code>.</li>
<li><strong>stdout</strong> – 1/True/true or 0/False/false, show <code>stdout</code> log. Default <code>false</code>.</li>
<li><strong>stderr</strong> – 1/True/true or 0/False/false, show <code>stderr</code> log. Default <code>false</code>.</li>
<li><strong>since</strong> – UNIX timestamp (integer) to filter logs. Specifying a timestamp
will only output log-entries since that timestamp. Default: 0 (unfiltered)</li>
<li><strong>timestamps</strong> – 1/True/true or 0/False/false, print timestamps for
    every log line. Default <code>false</code>.</li>
<li><strong>tail</strong> – Output specified number of lines at the end of logs: <code>all</code> or <code>&lt;number&gt;</code>. Default all.</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>101</strong> – no error, hints proxy about hijacking</li>
<li><strong>200</strong> – no error, no upgrade header found</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="inspect-changes-on-a-container-s-filesystem">Inspect changes on a container&rsquo;s filesystem</h3>

<p><code>GET /containers/(id or name)/changes</code></p>

<p>Inspect changes on container <code>id</code>&rsquo;s filesystem</p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /containers/4fa6e0f0c678/changes HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

[
     {
             &quot;Path&quot;: &quot;/dev&quot;,
             &quot;Kind&quot;: 0
     },
     {
             &quot;Path&quot;: &quot;/dev/kmsg&quot;,
             &quot;Kind&quot;: 1
     },
     {
             &quot;Path&quot;: &quot;/test&quot;,
             &quot;Kind&quot;: 1
     }
]
</code></pre>

<p>Values for <code>Kind</code>:</p>

<ul>
<li><code>0</code>: Modify</li>
<li><code>1</code>: Add</li>
<li><code>2</code>: Delete</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="export-a-container">Export a container</h3>

<p><code>GET /containers/(id or name)/export</code></p>

<p>Export the contents of container <code>id</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /containers/4fa6e0f0c678/export HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/octet-stream

{{ TAR STREAM }}
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="get-container-stats-based-on-resource-usage">Get container stats based on resource usage</h3>

<p><code>GET /containers/(id or name)/stats</code></p>

<p>This endpoint returns a live stream of a container&rsquo;s resource usage statistics.</p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /containers/redis1/stats HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>  HTTP/1.1 200 OK
  Content-Type: application/json

  {
     &quot;read&quot; : &quot;2015-01-08T22:57:31.547920715Z&quot;,
     &quot;networks&quot;: {
             &quot;eth0&quot;: {
                 &quot;rx_bytes&quot;: 5338,
                 &quot;rx_dropped&quot;: 0,
                 &quot;rx_errors&quot;: 0,
                 &quot;rx_packets&quot;: 36,
                 &quot;tx_bytes&quot;: 648,
                 &quot;tx_dropped&quot;: 0,
                 &quot;tx_errors&quot;: 0,
                 &quot;tx_packets&quot;: 8
             },
             &quot;eth5&quot;: {
                 &quot;rx_bytes&quot;: 4641,
                 &quot;rx_dropped&quot;: 0,
                 &quot;rx_errors&quot;: 0,
                 &quot;rx_packets&quot;: 26,
                 &quot;tx_bytes&quot;: 690,
                 &quot;tx_dropped&quot;: 0,
                 &quot;tx_errors&quot;: 0,
                 &quot;tx_packets&quot;: 9
             }
     },
     &quot;memory_stats&quot; : {
        &quot;stats&quot; : {
           &quot;total_pgmajfault&quot; : 0,
           &quot;cache&quot; : 0,
           &quot;mapped_file&quot; : 0,
           &quot;total_inactive_file&quot; : 0,
           &quot;pgpgout&quot; : 414,
           &quot;rss&quot; : 6537216,
           &quot;total_mapped_file&quot; : 0,
           &quot;writeback&quot; : 0,
           &quot;unevictable&quot; : 0,
           &quot;pgpgin&quot; : 477,
           &quot;total_unevictable&quot; : 0,
           &quot;pgmajfault&quot; : 0,
           &quot;total_rss&quot; : 6537216,
           &quot;total_rss_huge&quot; : 6291456,
           &quot;total_writeback&quot; : 0,
           &quot;total_inactive_anon&quot; : 0,
           &quot;rss_huge&quot; : 6291456,
           &quot;hierarchical_memory_limit&quot; : 67108864,
           &quot;total_pgfault&quot; : 964,
           &quot;total_active_file&quot; : 0,
           &quot;active_anon&quot; : 6537216,
           &quot;total_active_anon&quot; : 6537216,
           &quot;total_pgpgout&quot; : 414,
           &quot;total_cache&quot; : 0,
           &quot;inactive_anon&quot; : 0,
           &quot;active_file&quot; : 0,
           &quot;pgfault&quot; : 964,
           &quot;inactive_file&quot; : 0,
           &quot;total_pgpgin&quot; : 477
        },
        &quot;max_usage&quot; : 6651904,
        &quot;usage&quot; : 6537216,
        &quot;failcnt&quot; : 0,
        &quot;limit&quot; : 67108864
     },
     &quot;blkio_stats&quot; : {},
     &quot;cpu_stats&quot; : {
        &quot;cpu_usage&quot; : {
           &quot;percpu_usage&quot; : [
              8646879,
              24472255,
              36438778,
              30657443
           ],
           &quot;usage_in_usermode&quot; : 50000000,
           &quot;total_usage&quot; : 100215355,
           &quot;usage_in_kernelmode&quot; : 30000000
        },
        &quot;system_cpu_usage&quot; : 739306590000000,
        &quot;throttling_data&quot; : {&quot;periods&quot;:0,&quot;throttled_periods&quot;:0,&quot;throttled_time&quot;:0}
     },
     &quot;precpu_stats&quot; : {
        &quot;cpu_usage&quot; : {
           &quot;percpu_usage&quot; : [
              8646879,
              24350896,
              36438778,
              30657443
           ],
           &quot;usage_in_usermode&quot; : 50000000,
           &quot;total_usage&quot; : 100093996,
           &quot;usage_in_kernelmode&quot; : 30000000
        },
        &quot;system_cpu_usage&quot; : 9492140000000,
        &quot;throttling_data&quot; : {&quot;periods&quot;:0,&quot;throttled_periods&quot;:0,&quot;throttled_time&quot;:0}
     }
  }
</code></pre>

<p>The precpu_stats is the cpu statistic of last read, which is used for calculating the cpu usage percent. It is not the exact copy of the “cpu_stats” field.</p>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>stream</strong> – 1/True/true or 0/False/false, pull stats once then disconnect. Default <code>true</code>.</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="resize-a-container-tty">Resize a container TTY</h3>

<p><code>POST /containers/(id or name)/resize</code></p>

<p>Resize the TTY for container with  <code>id</code>. The unit is number of characters. You must restart the container for the resize to take effect.</p>

<p><strong>Example request</strong>:</p>

<pre><code>  POST /containers/4fa6e0f0c678/resize?h=40&amp;w=80 HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>  HTTP/1.1 200 OK
  Content-Length: 0
  Content-Type: text/plain; charset=utf-8
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>h</strong> – height of <code>tty</code> session</li>
<li><strong>w</strong> – width</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – No such container</li>
<li><strong>500</strong> – Cannot resize container</li>
</ul>

<h3 id="start-a-container">Start a container</h3>

<p><code>POST /containers/(id or name)/start</code></p>

<p>Start the container <code>id</code></p>

<blockquote>
<p><strong>Note</strong>:
For backwards compatibility, this endpoint accepts a <code>HostConfig</code> as JSON-encoded request body.
See <a href="#create-a-container">create a container</a> for details.</p>
</blockquote>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/e90e34656806/start HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 204 No Content
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>detachKeys</strong> – Override the key sequence for detaching a
    container. Format is a single character <code>[a-Z]</code> or <code>ctrl-&lt;value&gt;</code>
    where <code>&lt;value&gt;</code> is one of: <code>a-z</code>, <code>@</code>, <code>^</code>, <code>[</code>, <code>,</code> or <code>_</code>.</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>204</strong> – no error</li>
<li><strong>304</strong> – container already started</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="stop-a-container">Stop a container</h3>

<p><code>POST /containers/(id or name)/stop</code></p>

<p>Stop the container <code>id</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/e90e34656806/stop?t=5 HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 204 No Content
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>t</strong> – number of seconds to wait before killing the container</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>204</strong> – no error</li>
<li><strong>304</strong> – container already stopped</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="restart-a-container">Restart a container</h3>

<p><code>POST /containers/(id or name)/restart</code></p>

<p>Restart the container <code>id</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/e90e34656806/restart?t=5 HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 204 No Content
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>t</strong> – number of seconds to wait before killing the container</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>204</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="kill-a-container">Kill a container</h3>

<p><code>POST /containers/(id or name)/kill</code></p>

<p>Kill the container <code>id</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/e90e34656806/kill HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 204 No Content
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>signal</strong> - Signal to send to the container: integer or string like <code>SIGINT</code>.
    When not set, <code>SIGKILL</code> is assumed and the call waits for the container to exit.</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>204</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="update-a-container">Update a container</h3>

<p><code>POST /containers/(id or name)/update</code></p>

<p>Update resource configs of one or more containers.</p>

<p><strong>Example request</strong>:</p>

<pre><code>   POST /containers/e90e34656806/update HTTP/1.1
   Content-Type: application/json

   {
     &quot;BlkioWeight&quot;: 300,
     &quot;CpuShares&quot;: 512,
     &quot;CpuPeriod&quot;: 100000,
     &quot;CpuQuota&quot;: 50000,
     &quot;CpusetCpus&quot;: &quot;0,1&quot;,
     &quot;CpusetMems&quot;: &quot;0&quot;,
     &quot;Memory&quot;: 314572800,
     &quot;MemorySwap&quot;: 514288000,
     &quot;MemoryReservation&quot;: 209715200,
     &quot;KernelMemory&quot;: 52428800,
   }
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>   HTTP/1.1 200 OK
   Content-Type: application/json

   {
       &quot;Warnings&quot;: []
   }
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>400</strong> – bad parameter</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="rename-a-container">Rename a container</h3>

<p><code>POST /containers/(id or name)/rename</code></p>

<p>Rename the container <code>id</code> to a <code>new_name</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/e90e34656806/rename?name=new_name HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 204 No Content
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>name</strong> – new name for the container</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>204</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>409</strong> - conflict name already assigned</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="pause-a-container">Pause a container</h3>

<p><code>POST /containers/(id or name)/pause</code></p>

<p>Pause the container <code>id</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/e90e34656806/pause HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 204 No Content
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>204</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="unpause-a-container">Unpause a container</h3>

<p><code>POST /containers/(id or name)/unpause</code></p>

<p>Unpause the container <code>id</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/e90e34656806/unpause HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 204 No Content
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>204</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="attach-to-a-container">Attach to a container</h3>

<p><code>POST /containers/(id or name)/attach</code></p>

<p>Attach to the container <code>id</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/16253994b7c4/attach?logs=1&amp;stream=0&amp;stdout=1 HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 101 UPGRADED
Content-Type: application/vnd.docker.raw-stream
Connection: Upgrade
Upgrade: tcp

{{ STREAM }}
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>detachKeys</strong> – Override the key sequence for detaching a
    container. Format is a single character <code>[a-Z]</code> or <code>ctrl-&lt;value&gt;</code>
    where <code>&lt;value&gt;</code> is one of: <code>a-z</code>, <code>@</code>, <code>^</code>, <code>[</code>, <code>,</code> or <code>_</code>.</li>
<li><strong>logs</strong> – 1/True/true or 0/False/false, return logs. Default <code>false</code>.</li>
<li><strong>stream</strong> – 1/True/true or 0/False/false, return stream.
    Default <code>false</code>.</li>
<li><strong>stdin</strong> – 1/True/true or 0/False/false, if <code>stream=true</code>, attach
    to <code>stdin</code>. Default <code>false</code>.</li>
<li><strong>stdout</strong> – 1/True/true or 0/False/false, if <code>logs=true</code>, return
    <code>stdout</code> log, if <code>stream=true</code>, attach to <code>stdout</code>. Default <code>false</code>.</li>
<li><strong>stderr</strong> – 1/True/true or 0/False/false, if <code>logs=true</code>, return
    <code>stderr</code> log, if <code>stream=true</code>, attach to <code>stderr</code>. Default <code>false</code>.</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>101</strong> – no error, hints proxy about hijacking</li>
<li><strong>200</strong> – no error, no upgrade header found</li>
<li><strong>400</strong> – bad parameter</li>
<li><strong>404</strong> – no such container</li>
<li><strong>409</strong> - container is paused</li>

<li><p><strong>500</strong> – server error</p>

<p><strong>Stream details</strong>:</p>

<p>When using the TTY setting is enabled in
<a href="#create-a-container"><code>POST /containers/create</code>
</a>,
the stream is the raw data from the process PTY and client&rsquo;s <code>stdin</code>.
When the TTY is disabled, then the stream is multiplexed to separate
<code>stdout</code> and <code>stderr</code>.</p>

<p>The format is a <strong>Header</strong> and a <strong>Payload</strong> (frame).</p>

<p><strong>HEADER</strong></p>

<p>The header contains the information which the stream writes (<code>stdout</code> or
<code>stderr</code>). It also contains the size of the associated frame encoded in the
last four bytes (<code>uint32</code>).</p>

<p>It is encoded on the first eight bytes like this:</p>

<pre><code>header := [8]byte{STREAM_TYPE, 0, 0, 0, SIZE1, SIZE2, SIZE3, SIZE4}
</code></pre>

<p><code>STREAM_TYPE</code> can be:</p></li>

<li><p>0: <code>stdin</code> (is written on <code>stdout</code>)</p></li>

<li><p>1: <code>stdout</code></p></li>

<li><p>2: <code>stderr</code></p>

<p><code>SIZE1, SIZE2, SIZE3, SIZE4</code> are the four bytes of
the <code>uint32</code> size encoded as big endian.</p>

<p><strong>PAYLOAD</strong></p>

<p>The payload is the raw stream.</p>

<p><strong>IMPLEMENTATION</strong></p>

<p>The simplest way to implement the Attach protocol is the following:</p>

<ol>
<li>Read eight bytes.</li>
<li>Choose <code>stdout</code> or <code>stderr</code> depending on the first byte.</li>
<li>Extract the frame size from the last four bytes.</li>
<li>Read the extracted size and output it on the correct output.</li>
<li>Goto 1.</li>
</ol></li>
</ul>

<h3 id="attach-to-a-container-websocket">Attach to a container (websocket)</h3>

<p><code>GET /containers/(id or name)/attach/ws</code></p>

<p>Attach to the container <code>id</code> via websocket</p>

<p>Implements websocket protocol handshake according to <a href="http://tools.ietf.org/html/rfc6455">RFC 6455</a></p>

<p><strong>Example request</strong></p>

<pre><code>GET /containers/e90e34656806/attach/ws?logs=0&amp;stream=1&amp;stdin=1&amp;stdout=1&amp;stderr=1 HTTP/1.1
</code></pre>

<p><strong>Example response</strong></p>

<pre><code>{{ STREAM }}
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>detachKeys</strong> – Override the key sequence for detaching a
    container. Format is a single character <code>[a-Z]</code> or <code>ctrl-&lt;value&gt;</code>
    where <code>&lt;value&gt;</code> is one of: <code>a-z</code>, <code>@</code>, <code>^</code>, <code>[</code>, <code>,</code> or <code>_</code>.</li>
<li><strong>logs</strong> – 1/True/true or 0/False/false, return logs. Default <code>false</code>.</li>
<li><strong>stream</strong> – 1/True/true or 0/False/false, return stream.
    Default <code>false</code>.</li>
<li><strong>stdin</strong> – 1/True/true or 0/False/false, if <code>stream=true</code>, attach
    to <code>stdin</code>. Default <code>false</code>.</li>
<li><strong>stdout</strong> – 1/True/true or 0/False/false, if <code>logs=true</code>, return
    <code>stdout</code> log, if <code>stream=true</code>, attach to <code>stdout</code>. Default <code>false</code>.</li>
<li><strong>stderr</strong> – 1/True/true or 0/False/false, if <code>logs=true</code>, return
    <code>stderr</code> log, if <code>stream=true</code>, attach to <code>stderr</code>. Default <code>false</code>.</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>400</strong> – bad parameter</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="wait-a-container">Wait a container</h3>

<p><code>POST /containers/(id or name)/wait</code></p>

<p>Block until container <code>id</code> stops, then returns the exit code</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/16253994b7c4/wait HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{&quot;StatusCode&quot;: 0}
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="remove-a-container">Remove a container</h3>

<p><code>DELETE /containers/(id or name)</code></p>

<p>Remove the container <code>id</code> from the filesystem</p>

<p><strong>Example request</strong>:</p>

<pre><code>DELETE /containers/16253994b7c4?v=1 HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 204 No Content
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>v</strong> – 1/True/true or 0/False/false, Remove the volumes
    associated to the container. Default <code>false</code>.</li>
<li><strong>force</strong> - 1/True/true or 0/False/false, Kill then remove the container.
    Default <code>false</code>.</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>204</strong> – no error</li>
<li><strong>400</strong> – bad parameter</li>
<li><strong>404</strong> – no such container</li>
<li><strong>409</strong> – conflict</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="copy-files-or-folders-from-a-container">Copy files or folders from a container</h3>

<p><code>POST /containers/(id or name)/copy</code></p>

<p>Copy files or folders of container <code>id</code></p>

<p><strong>Deprecated</strong> in favor of the <code>archive</code> endpoint below.</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/4fa6e0f0c678/copy HTTP/1.1
Content-Type: application/json

{
     &quot;Resource&quot;: &quot;test.txt&quot;
}
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/x-tar

{{ TAR STREAM }}
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="retrieving-information-about-files-and-folders-in-a-container">Retrieving information about files and folders in a container</h3>

<p><code>HEAD /containers/(id or name)/archive</code></p>

<p>See the description of the <code>X-Docker-Container-Path-Stat</code> header in the
following section.</p>

<h3 id="get-an-archive-of-a-filesystem-resource-in-a-container">Get an archive of a filesystem resource in a container</h3>

<p><code>GET /containers/(id or name)/archive</code></p>

<p>Get a tar archive of a resource in the filesystem of container <code>id</code>.</p>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><p><strong>path</strong> - resource in the container&rsquo;s filesystem to archive. Required.</p>

<p>If not an absolute path, it is relative to the container&rsquo;s root directory.
The resource specified by <strong>path</strong> must exist. To assert that the resource
is expected to be a directory, <strong>path</strong> should end in <code>/</code> or  <code>/.</code>
(assuming a path separator of <code>/</code>). If <strong>path</strong> ends in <code>/.</code> then this
indicates that only the contents of the <strong>path</strong> directory should be
copied. A symlink is always resolved to its target.</p>

<blockquote>
<p><strong>Note</strong>: It is not possible to copy certain system files such as resources
under <code>/proc</code>, <code>/sys</code>, <code>/dev</code>, and mounts created by the user in the
container.</p>
</blockquote></li>
</ul>

<p><strong>Example request</strong>:</p>

<pre><code>GET /containers/8cce319429b2/archive?path=/root HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/x-tar
X-Docker-Container-Path-Stat: eyJuYW1lIjoicm9vdCIsInNpemUiOjQwOTYsIm1vZGUiOjIxNDc0ODQwOTYsIm10aW1lIjoiMjAxNC0wMi0yN1QyMDo1MToyM1oiLCJsaW5rVGFyZ2V0IjoiIn0=

{{ TAR STREAM }}
</code></pre>

<p>On success, a response header <code>X-Docker-Container-Path-Stat</code> will be set to a
base64-encoded JSON object containing some filesystem header information about
the archived resource. The above example value would decode to the following
JSON object (whitespace added for readability):</p>

<pre><code class="language-json">{
    &quot;name&quot;: &quot;root&quot;,
    &quot;size&quot;: 4096,
    &quot;mode&quot;: 2147484096,
    &quot;mtime&quot;: &quot;2014-02-27T20:51:23Z&quot;,
    &quot;linkTarget&quot;: &quot;&quot;
}
</code></pre>

<p>A <code>HEAD</code> request can also be made to this endpoint if only this information is
desired.</p>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> - success, returns archive of copied resource</li>
<li><strong>400</strong> - client error, bad parameter, details in JSON response body, one of:

<ul>
<li>must specify path parameter (<strong>path</strong> cannot be empty)</li>
<li>not a directory (<strong>path</strong> was asserted to be a directory but exists as a
file)</li>
</ul></li>
<li><strong>404</strong> - client error, resource not found, one of:
– no such container (container <code>id</code> does not exist)

<ul>
<li>no such file or directory (<strong>path</strong> does not exist)</li>
</ul></li>
<li><strong>500</strong> - server error</li>
</ul>

<h3 id="extract-an-archive-of-files-or-folders-to-a-directory-in-a-container">Extract an archive of files or folders to a directory in a container</h3>

<p><code>PUT /containers/(id or name)/archive</code></p>

<p>Upload a tar archive to be extracted to a path in the filesystem of container
<code>id</code>.</p>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><p><strong>path</strong> - path to a directory in the container
to extract the archive&rsquo;s contents into. Required.</p>

<p>If not an absolute path, it is relative to the container&rsquo;s root directory.
The <strong>path</strong> resource must exist.</p></li>

<li><p><strong>noOverwriteDirNonDir</strong> - If &ldquo;1&rdquo;, &ldquo;true&rdquo;, or &ldquo;True&rdquo; then it will be an error
if unpacking the given content would cause an existing directory to be
replaced with a non-directory and vice versa.</p></li>
</ul>

<p><strong>Example request</strong>:</p>

<pre><code>PUT /containers/8cce319429b2/archive?path=/vol1 HTTP/1.1
Content-Type: application/x-tar

{{ TAR STREAM }}
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – the content was extracted successfully</li>
<li><strong>400</strong> - client error, bad parameter, details in JSON response body, one of:

<ul>
<li>must specify path parameter (<strong>path</strong> cannot be empty)</li>
<li>not a directory (<strong>path</strong> should be a directory but exists as a file)</li>
<li>unable to overwrite existing directory with non-directory
(if <strong>noOverwriteDirNonDir</strong>)</li>
<li>unable to overwrite existing non-directory with directory
(if <strong>noOverwriteDirNonDir</strong>)</li>
</ul></li>
<li><strong>403</strong> - client error, permission denied, the volume
or container rootfs is marked as read-only.</li>
<li><strong>404</strong> - client error, resource not found, one of:
– no such container (container <code>id</code> does not exist)

<ul>
<li>no such file or directory (<strong>path</strong> resource does not exist)</li>
</ul></li>
<li><strong>500</strong> – server error</li>
</ul>

<h2 id="2-2-images">2.2 Images</h2>

<h3 id="list-images">List Images</h3>

<p><code>GET /images/json</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /images/json?all=0 HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

[
  {
     &quot;RepoTags&quot;: [
       &quot;ubuntu:12.04&quot;,
       &quot;ubuntu:precise&quot;,
       &quot;ubuntu:latest&quot;
     ],
     &quot;Id&quot;: &quot;8dbd9e392a964056420e5d58ca5cc376ef18e2de93b5cc90e868a1bbc8318c1c&quot;,
     &quot;Created&quot;: 1365714795,
     &quot;Size&quot;: 131506275,
     &quot;VirtualSize&quot;: 131506275,
     &quot;Labels&quot;: {}
  },
  {
     &quot;RepoTags&quot;: [
       &quot;ubuntu:12.10&quot;,
       &quot;ubuntu:quantal&quot;
     ],
     &quot;ParentId&quot;: &quot;27cf784147099545&quot;,
     &quot;Id&quot;: &quot;b750fe79269d2ec9a3c593ef05b4332b1d1a02a62b4accb2c21d589ff2f5f2dc&quot;,
     &quot;Created&quot;: 1364102658,
     &quot;Size&quot;: 24653,
     &quot;VirtualSize&quot;: 180116135,
     &quot;Labels&quot;: {
        &quot;com.example.version&quot;: &quot;v1&quot;
     }
  }
]
</code></pre>

<p><strong>Example request, with digest information</strong>:</p>

<pre><code>GET /images/json?digests=1 HTTP/1.1
</code></pre>

<p><strong>Example response, with digest information</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

[
  {
    &quot;Created&quot;: 1420064636,
    &quot;Id&quot;: &quot;4986bf8c15363d1c5d15512d5266f8777bfba4974ac56e3270e7760f6f0a8125&quot;,
    &quot;ParentId&quot;: &quot;ea13149945cb6b1e746bf28032f02e9b5a793523481a0a18645fc77ad53c4ea2&quot;,
    &quot;RepoDigests&quot;: [
      &quot;localhost:5000/test/busybox@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf&quot;
    ],
    &quot;RepoTags&quot;: [
      &quot;localhost:5000/test/busybox:latest&quot;,
      &quot;playdate:latest&quot;
    ],
    &quot;Size&quot;: 0,
    &quot;VirtualSize&quot;: 2429728,
    &quot;Labels&quot;: {}
  }
]
</code></pre>

<p>The response shows a single image <code>Id</code> associated with two repositories
(<code>RepoTags</code>): <code>localhost:5000/test/busybox</code>: and <code>playdate</code>. A caller can use
either of the <code>RepoTags</code> values <code>localhost:5000/test/busybox:latest</code> or
<code>playdate:latest</code> to reference the image.</p>

<p>You can also use <code>RepoDigests</code> values to reference an image. In this response,
the array has only one reference and that is to the
<code>localhost:5000/test/busybox</code> repository; the <code>playdate</code> repository has no
digest. You can reference this digest using the value:
<code>localhost:5000/test/busybox@sha256:cbbf2f9a99b47fc460d...</code></p>

<p>See the <code>docker run</code> and <code>docker build</code> commands for examples of digest and tag
references on the command line.</p>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>all</strong> – 1/True/true or 0/False/false, default false</li>
<li><strong>filters</strong> – a JSON encoded value of the filters (a map[string][]string) to process on the images list. Available filters:

<ul>
<li><code>dangling=true</code></li>
<li><code>label=key</code> or <code>label=&quot;key=value&quot;</code> of an image label</li>
</ul></li>
<li><strong>filter</strong> - only return images with the specified name</li>
</ul>

<h3 id="build-image-from-a-dockerfile">Build image from a Dockerfile</h3>

<p><code>POST /build</code></p>

<p>Build an image from a Dockerfile</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /build HTTP/1.1

{{ TAR STREAM }}
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{&quot;stream&quot;: &quot;Step 1...&quot;}
{&quot;stream&quot;: &quot;...&quot;}
{&quot;error&quot;: &quot;Error...&quot;, &quot;errorDetail&quot;: {&quot;code&quot;: 123, &quot;message&quot;: &quot;Error...&quot;}}
</code></pre>

<p>The input stream must be a <code>tar</code> archive compressed with one of the
following algorithms: <code>identity</code> (no compression), <code>gzip</code>, <code>bzip2</code>, <code>xz</code>.</p>

<p>The archive must include a build instructions file, typically called
<code>Dockerfile</code> at the archive&rsquo;s root. The <code>dockerfile</code> parameter may be
used to specify a different build instructions file. To do this, its value must be
the path to the alternate build instructions file to use.</p>

<p>The archive may include any number of other files,
which are accessible in the build context (See the <a href="../../../../engine/reference/builder/#add"><em>ADD build
command</em></a>).</p>

<p>The build is canceled if the client drops the connection by quitting
or being killed.</p>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>dockerfile</strong> - Path within the build context to the <code>Dockerfile</code>. This is
    ignored if <code>remote</code> is specified and points to an external <code>Dockerfile</code>.</li>
<li><strong>t</strong> – A name and optional tag to apply to the image in the <code>name:tag</code> format.
    If you omit the <code>tag</code> the default <code>latest</code> value is assumed.
    You can provide one or more <code>t</code> parameters.</li>
<li><strong>remote</strong> – A Git repository URI or HTTP/HTTPS context URI. If the
    URI points to a single text file, the file&rsquo;s contents are placed into
    a file called <code>Dockerfile</code> and the image is built from that file. If
    the URI points to a tarball, the file is downloaded by the daemon and
    the contents therein used as the context for the build. If the URI
    points to a tarball and the <code>dockerfile</code> parameter is also specified,
    there must be a file with the corresponding path inside the tarball.</li>
<li><strong>q</strong> – Suppress verbose build output.</li>
<li><strong>nocache</strong> – Do not use the cache when building the image.</li>
<li><strong>pull</strong> - Attempt to pull the image even if an older image exists locally.</li>
<li><strong>rm</strong> - Remove intermediate containers after a successful build (default behavior).</li>
<li><strong>forcerm</strong> - Always remove intermediate containers (includes <code>rm</code>).</li>
<li><strong>memory</strong> - Set memory limit for build.</li>
<li><strong>memswap</strong> - Total memory (memory + swap), <code>-1</code> to enable unlimited swap.</li>
<li><strong>cpushares</strong> - CPU shares (relative weight).</li>
<li><strong>cpusetcpus</strong> - CPUs in which to allow execution (e.g., <code>0-3</code>, <code>0,1</code>).</li>
<li><strong>cpuperiod</strong> - The length of a CPU period in microseconds.</li>
<li><strong>cpuquota</strong> - Microseconds of CPU time that the container can get in a CPU period.</li>
<li><strong>buildargs</strong> – JSON map of string pairs for build-time variables. Users pass
    these values at build-time. Docker uses the <code>buildargs</code> as the environment
    context for command(s) run via the Dockerfile&rsquo;s <code>RUN</code> instruction or for
    variable expansion in other Dockerfile instructions. This is not meant for
    passing secret values. <a href="../../../../engine/reference/builder/#arg">Read more about the buildargs instruction</a></li>
<li><strong>shmsize</strong> - Size of <code>/dev/shm</code> in bytes. The size must be greater than 0.  If omitted the system uses 64MB.</li>
</ul>

<p><strong>Request Headers</strong>:</p>

<ul>
<li><strong>Content-type</strong> – Set to <code>&quot;application/tar&quot;</code>.</li>

<li><p><strong>X-Registry-Config</strong> – A base64-url-safe-encoded Registry Auth Config JSON
    object with the following structure:</p>

<pre><code>    {
        &quot;docker.example.com&quot;: {
            &quot;username&quot;: &quot;janedoe&quot;,
            &quot;password&quot;: &quot;hunter2&quot;
        },
        &quot;https://index.docker.io/v1/&quot;: {
            &quot;username&quot;: &quot;mobydock&quot;,
            &quot;password&quot;: &quot;conta1n3rize14&quot;
        }
    }
</code></pre>

<p>This object maps the hostname of a registry to an object containing the
&ldquo;username&rdquo; and &ldquo;password&rdquo; for that registry. Multiple registries may
be specified as the build may be based on an image requiring
authentication to pull from any arbitrary registry. Only the registry
domain name (and port if not the default &ldquo;443&rdquo;) are required. However
(for legacy reasons) the &ldquo;official&rdquo; Docker, Inc. hosted registry must
be specified with both a &ldquo;https://&rdquo; prefix and a &ldquo;/v1/&rdquo; suffix even
though Docker will prefer to use the v2 registry API.</p></li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="create-an-image">Create an image</h3>

<p><code>POST /images/create</code></p>

<p>Create an image either by pulling it from the registry or by importing it</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /images/create?fromImage=ubuntu HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{&quot;status&quot;: &quot;Pulling...&quot;}
{&quot;status&quot;: &quot;Pulling&quot;, &quot;progress&quot;: &quot;1 B/ 100 B&quot;, &quot;progressDetail&quot;: {&quot;current&quot;: 1, &quot;total&quot;: 100}}
{&quot;error&quot;: &quot;Invalid...&quot;}
...
</code></pre>

<p>When using this endpoint to pull an image from the registry, the
<code>X-Registry-Auth</code> header can be used to include
a base64-encoded AuthConfig object.</p>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>fromImage</strong> – Name of the image to pull. The name may include a tag or
    digest. This parameter may only be used when pulling an image.
    The pull is cancelled if the HTTP connection is closed.</li>
<li><strong>fromSrc</strong> – Source to import.  The value may be a URL from which the image
    can be retrieved or <code>-</code> to read the image from the request body.
    This parameter may only be used when importing an image.</li>
<li><strong>repo</strong> – Repository name given to an image when it is imported.
    The repo may include a tag. This parameter may only be used when importing
    an image.</li>
<li><strong>tag</strong> – Tag or digest.</li>
</ul>

<p><strong>Request Headers</strong>:</p>

<ul>
<li><p><strong>X-Registry-Auth</strong> – base64-encoded AuthConfig object, containing either login information, or a token</p>

<ul>
<li><p>Credential based login:</p>

<pre><code>{
    &quot;username&quot;: &quot;jdoe&quot;,
    &quot;password&quot;: &quot;secret&quot;,
    &quot;email&quot;: &quot;jdoe@acme.com&quot;
}
</code></pre></li>

<li><p>Token based login:</p>

<pre><code>{
    &quot;registrytoken&quot;: &quot;9cbaf023786cd7...&quot;
}
</code></pre></li>
</ul></li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="inspect-an-image">Inspect an image</h3>

<p><code>GET /images/(name)/json</code></p>

<p>Return low-level information on the image <code>name</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /images/example/json HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{
   &quot;Id&quot; : &quot;85f05633ddc1c50679be2b16a0479ab6f7637f8884e0cfe0f4d20e1ebb3d6e7c&quot;,
   &quot;Container&quot; : &quot;cb91e48a60d01f1e27028b4fc6819f4f290b3cf12496c8176ec714d0d390984a&quot;,
   &quot;Comment&quot; : &quot;&quot;,
   &quot;Os&quot; : &quot;linux&quot;,
   &quot;Architecture&quot; : &quot;amd64&quot;,
   &quot;Parent&quot; : &quot;91e54dfb11794fad694460162bf0cb0a4fa710cfa3f60979c177d920813e267c&quot;,
   &quot;ContainerConfig&quot; : {
      &quot;Tty&quot; : false,
      &quot;Hostname&quot; : &quot;e611e15f9c9d&quot;,
      &quot;Volumes&quot; : null,
      &quot;Domainname&quot; : &quot;&quot;,
      &quot;AttachStdout&quot; : false,
      &quot;PublishService&quot; : &quot;&quot;,
      &quot;AttachStdin&quot; : false,
      &quot;OpenStdin&quot; : false,
      &quot;StdinOnce&quot; : false,
      &quot;NetworkDisabled&quot; : false,
      &quot;OnBuild&quot; : [],
      &quot;Image&quot; : &quot;91e54dfb11794fad694460162bf0cb0a4fa710cfa3f60979c177d920813e267c&quot;,
      &quot;User&quot; : &quot;&quot;,
      &quot;WorkingDir&quot; : &quot;&quot;,
      &quot;Entrypoint&quot; : null,
      &quot;MacAddress&quot; : &quot;&quot;,
      &quot;AttachStderr&quot; : false,
      &quot;Labels&quot; : {
         &quot;com.example.license&quot; : &quot;GPL&quot;,
         &quot;com.example.version&quot; : &quot;1.0&quot;,
         &quot;com.example.vendor&quot; : &quot;Acme&quot;
      },
      &quot;Env&quot; : [
         &quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;
      ],
      &quot;ExposedPorts&quot; : null,
      &quot;Cmd&quot; : [
         &quot;/bin/sh&quot;,
         &quot;-c&quot;,
         &quot;#(nop) LABEL com.example.vendor=Acme com.example.license=GPL com.example.version=1.0&quot;
      ]
   },
   &quot;DockerVersion&quot; : &quot;1.9.0-dev&quot;,
   &quot;VirtualSize&quot; : 188359297,
   &quot;Size&quot; : 0,
   &quot;Author&quot; : &quot;&quot;,
   &quot;Created&quot; : &quot;2015-09-10T08:30:53.26995814Z&quot;,
   &quot;GraphDriver&quot; : {
      &quot;Name&quot; : &quot;aufs&quot;,
      &quot;Data&quot; : null
   },
   &quot;RepoDigests&quot; : [
      &quot;localhost:5000/test/busybox/example@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf&quot;
   ],
   &quot;RepoTags&quot; : [
      &quot;example:1.0&quot;,
      &quot;example:latest&quot;,
      &quot;example:stable&quot;
   ],
   &quot;Config&quot; : {
      &quot;Image&quot; : &quot;91e54dfb11794fad694460162bf0cb0a4fa710cfa3f60979c177d920813e267c&quot;,
      &quot;NetworkDisabled&quot; : false,
      &quot;OnBuild&quot; : [],
      &quot;StdinOnce&quot; : false,
      &quot;PublishService&quot; : &quot;&quot;,
      &quot;AttachStdin&quot; : false,
      &quot;OpenStdin&quot; : false,
      &quot;Domainname&quot; : &quot;&quot;,
      &quot;AttachStdout&quot; : false,
      &quot;Tty&quot; : false,
      &quot;Hostname&quot; : &quot;e611e15f9c9d&quot;,
      &quot;Volumes&quot; : null,
      &quot;Cmd&quot; : [
         &quot;/bin/bash&quot;
      ],
      &quot;ExposedPorts&quot; : null,
      &quot;Env&quot; : [
         &quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&quot;
      ],
      &quot;Labels&quot; : {
         &quot;com.example.vendor&quot; : &quot;Acme&quot;,
         &quot;com.example.version&quot; : &quot;1.0&quot;,
         &quot;com.example.license&quot; : &quot;GPL&quot;
      },
      &quot;Entrypoint&quot; : null,
      &quot;MacAddress&quot; : &quot;&quot;,
      &quot;AttachStderr&quot; : false,
      &quot;WorkingDir&quot; : &quot;&quot;,
      &quot;User&quot; : &quot;&quot;
   }
}
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such image</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="get-the-history-of-an-image">Get the history of an image</h3>

<p><code>GET /images/(name)/history</code></p>

<p>Return the history of the image <code>name</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /images/ubuntu/history HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

[
    {
        &quot;Id&quot;: &quot;3db9c44f45209632d6050b35958829c3a2aa256d81b9a7be45b362ff85c54710&quot;,
        &quot;Created&quot;: 1398108230,
        &quot;CreatedBy&quot;: &quot;/bin/sh -c #(nop) ADD file:eb15dbd63394e063b805a3c32ca7bf0266ef64676d5a6fab4801f2e81e2a5148 in /&quot;,
        &quot;Tags&quot;: [
            &quot;ubuntu:lucid&quot;,
            &quot;ubuntu:10.04&quot;
        ],
        &quot;Size&quot;: 182964289,
        &quot;Comment&quot;: &quot;&quot;
    },
    {
        &quot;Id&quot;: &quot;6cfa4d1f33fb861d4d114f43b25abd0ac737509268065cdfd69d544a59c85ab8&quot;,
        &quot;Created&quot;: 1398108222,
        &quot;CreatedBy&quot;: &quot;/bin/sh -c #(nop) MAINTAINER Tianon Gravi &lt;admwiggin@gmail.com&gt; - mkimage-debootstrap.sh -i iproute,iputils-ping,ubuntu-minimal -t lucid.tar.xz lucid http://archive.ubuntu.com/ubuntu/&quot;,
        &quot;Tags&quot;: null,
        &quot;Size&quot;: 0,
        &quot;Comment&quot;: &quot;&quot;
    },
    {
        &quot;Id&quot;: &quot;511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158&quot;,
        &quot;Created&quot;: 1371157430,
        &quot;CreatedBy&quot;: &quot;&quot;,
        &quot;Tags&quot;: [
            &quot;scratch12:latest&quot;,
            &quot;scratch:latest&quot;
        ],
        &quot;Size&quot;: 0,
        &quot;Comment&quot;: &quot;Imported from -&quot;
    }
]
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such image</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="push-an-image-on-the-registry">Push an image on the registry</h3>

<p><code>POST /images/(name)/push</code></p>

<p>Push the image <code>name</code> on the registry</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /images/test/push HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{&quot;status&quot;: &quot;Pushing...&quot;}
{&quot;status&quot;: &quot;Pushing&quot;, &quot;progress&quot;: &quot;1/? (n/a)&quot;, &quot;progressDetail&quot;: {&quot;current&quot;: 1}}}
{&quot;error&quot;: &quot;Invalid...&quot;}
...
</code></pre>

<p>If you wish to push an image on to a private registry, that image must already have a tag
into a repository which references that registry <code>hostname</code> and <code>port</code>.  This repository name should
then be used in the URL. This duplicates the command line&rsquo;s flow.</p>

<p>The push is cancelled if the HTTP connection is closed.</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /images/registry.acme.com:5000/test/push HTTP/1.1
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>tag</strong> – The tag to associate with the image on the registry. This is optional.</li>
</ul>

<p><strong>Request Headers</strong>:</p>

<ul>
<li><p><strong>X-Registry-Auth</strong> – base64-encoded AuthConfig object, containing either login information, or a token</p>

<ul>
<li><p>Credential based login:</p>

<pre><code>{
    &quot;username&quot;: &quot;jdoe&quot;,
    &quot;password&quot;: &quot;secret&quot;,
    &quot;email&quot;: &quot;jdoe@acme.com&quot;,
}
</code></pre></li>

<li><p>Token based login:</p>

<pre><code>{
    &quot;registrytoken&quot;: &quot;9cbaf023786cd7...&quot;
}
</code></pre></li>
</ul></li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such image</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="tag-an-image-into-a-repository">Tag an image into a repository</h3>

<p><code>POST /images/(name)/tag</code></p>

<p>Tag the image <code>name</code> into a repository</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /images/test/tag?repo=myrepo&amp;force=0&amp;tag=v42 HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 201 Created
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>repo</strong> – The repository to tag in</li>
<li><strong>force</strong> – 1/True/true or 0/False/false, default false</li>
<li><strong>tag</strong> - The new tag name</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>201</strong> – no error</li>
<li><strong>400</strong> – bad parameter</li>
<li><strong>404</strong> – no such image</li>
<li><strong>409</strong> – conflict</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="remove-an-image">Remove an image</h3>

<p><code>DELETE /images/(name)</code></p>

<p>Remove the image <code>name</code> from the filesystem</p>

<p><strong>Example request</strong>:</p>

<pre><code>DELETE /images/test HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-type: application/json

[
 {&quot;Untagged&quot;: &quot;3e2f21a89f&quot;},
 {&quot;Deleted&quot;: &quot;3e2f21a89f&quot;},
 {&quot;Deleted&quot;: &quot;53b4f83ac9&quot;}
]
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>force</strong> – 1/True/true or 0/False/false, default false</li>
<li><strong>noprune</strong> – 1/True/true or 0/False/false, default false</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such image</li>
<li><strong>409</strong> – conflict</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="search-images">Search images</h3>

<p><code>GET /images/search</code></p>

<p>Search for an image on <a href="https://hub.docker.com">Docker Hub</a>.</p>

<blockquote>
<p><strong>Note</strong>:
The response keys have changed from API v1.6 to reflect the JSON
sent by the registry server to the docker daemon&rsquo;s request.</p>
</blockquote>

<p><strong>Example request</strong>:</p>

<pre><code>GET /images/search?term=sshd HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

[
        {
            &quot;description&quot;: &quot;&quot;,
            &quot;is_official&quot;: false,
            &quot;is_automated&quot;: false,
            &quot;name&quot;: &quot;wma55/u1210sshd&quot;,
            &quot;star_count&quot;: 0
        },
        {
            &quot;description&quot;: &quot;&quot;,
            &quot;is_official&quot;: false,
            &quot;is_automated&quot;: false,
            &quot;name&quot;: &quot;jdswinbank/sshd&quot;,
            &quot;star_count&quot;: 0
        },
        {
            &quot;description&quot;: &quot;&quot;,
            &quot;is_official&quot;: false,
            &quot;is_automated&quot;: false,
            &quot;name&quot;: &quot;vgauthier/sshd&quot;,
            &quot;star_count&quot;: 0
        }
...
]
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>term</strong> – term to search</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>500</strong> – server error</li>
</ul>

<h2 id="2-3-misc">2.3 Misc</h2>

<h3 id="check-auth-configuration">Check auth configuration</h3>

<p><code>POST /auth</code></p>

<p>Get the default username and email</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /auth HTTP/1.1
Content-Type: application/json

{
     &quot;username&quot;: &quot;hannibal&quot;,
     &quot;password&quot;: &quot;xxxx&quot;,
     &quot;email&quot;: &quot;hannibal@a-team.com&quot;,
     &quot;serveraddress&quot;: &quot;https://index.docker.io/v1/&quot;
}
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>204</strong> – no error</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="display-system-wide-information">Display system-wide information</h3>

<p><code>GET /info</code></p>

<p>Display system-wide information</p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /info HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{
    &quot;Architecture&quot;: &quot;x86_64&quot;,
    &quot;ClusterStore&quot;: &quot;etcd://localhost:2379&quot;,
    &quot;Containers&quot;: 11,
    &quot;ContainersRunning&quot;: 7,
    &quot;ContainersStopped&quot;: 3,
    &quot;ContainersPaused&quot;: 1,
    &quot;CpuCfsPeriod&quot;: true,
    &quot;CpuCfsQuota&quot;: true,
    &quot;Debug&quot;: false,
    &quot;DockerRootDir&quot;: &quot;/var/lib/docker&quot;,
    &quot;Driver&quot;: &quot;btrfs&quot;,
    &quot;DriverStatus&quot;: [[&quot;&quot;]],
    &quot;ExecutionDriver&quot;: &quot;native-0.1&quot;,
    &quot;ExperimentalBuild&quot;: false,
    &quot;HttpProxy&quot;: &quot;http://test:test@localhost:8080&quot;,
    &quot;HttpsProxy&quot;: &quot;https://test:test@localhost:8080&quot;,
    &quot;ID&quot;: &quot;7TRN:IPZB:QYBB:VPBQ:UMPP:KARE:6ZNR:XE6T:7EWV:PKF4:ZOJD:TPYS&quot;,
    &quot;IPv4Forwarding&quot;: true,
    &quot;Images&quot;: 16,
    &quot;IndexServerAddress&quot;: &quot;https://index.docker.io/v1/&quot;,
    &quot;InitPath&quot;: &quot;/usr/bin/docker&quot;,
    &quot;InitSha1&quot;: &quot;&quot;,
    &quot;KernelVersion&quot;: &quot;3.12.0-1-amd64&quot;,
    &quot;Labels&quot;: [
        &quot;storage=ssd&quot;
    ],
    &quot;MemTotal&quot;: 2099236864,
    &quot;MemoryLimit&quot;: true,
    &quot;NCPU&quot;: 1,
    &quot;NEventsListener&quot;: 0,
    &quot;NFd&quot;: 11,
    &quot;NGoroutines&quot;: 21,
    &quot;Name&quot;: &quot;prod-server-42&quot;,
    &quot;NoProxy&quot;: &quot;9.81.1.160&quot;,
    &quot;OomKillDisable&quot;: true,
    &quot;OSType&quot;: &quot;linux&quot;,
    &quot;OperatingSystem&quot;: &quot;Boot2Docker&quot;,
    &quot;Plugins&quot;: {
        &quot;Volume&quot;: [
            &quot;local&quot;
        ],
        &quot;Network&quot;: [
            &quot;null&quot;,
            &quot;host&quot;,
            &quot;bridge&quot;
        ]
    },
    &quot;RegistryConfig&quot;: {
        &quot;IndexConfigs&quot;: {
            &quot;docker.io&quot;: {
                &quot;Mirrors&quot;: null,
                &quot;Name&quot;: &quot;docker.io&quot;,
                &quot;Official&quot;: true,
                &quot;Secure&quot;: true
            }
        },
        &quot;InsecureRegistryCIDRs&quot;: [
            &quot;127.0.0.0/8&quot;
        ]
    },
    &quot;ServerVersion&quot;: &quot;1.9.0&quot;,
    &quot;SwapLimit&quot;: false,
    &quot;SystemStatus&quot;: [[&quot;State&quot;, &quot;Healthy&quot;]],
    &quot;SystemTime&quot;: &quot;2015-03-10T11:11:23.730591467-07:00&quot;
}
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="show-the-docker-version-information">Show the docker version information</h3>

<p><code>GET /version</code></p>

<p>Show the docker version information</p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /version HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{
     &quot;Version&quot;: &quot;1.10.0&quot;,
     &quot;Os&quot;: &quot;linux&quot;,
     &quot;KernelVersion&quot;: &quot;3.19.0-23-generic&quot;,
     &quot;GoVersion&quot;: &quot;go1.4.2&quot;,
     &quot;GitCommit&quot;: &quot;e75da4b&quot;,
     &quot;Arch&quot;: &quot;amd64&quot;,
     &quot;ApiVersion&quot;: &quot;1.22&quot;,
     &quot;BuildTime&quot;: &quot;2015-12-01T07:09:13.444803460+00:00&quot;,
     &quot;Experimental&quot;: true
}
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="ping-the-docker-server">Ping the docker server</h3>

<p><code>GET /_ping</code></p>

<p>Ping the docker server</p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /_ping HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: text/plain

OK
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> - no error</li>
<li><strong>500</strong> - server error</li>
</ul>

<h3 id="create-a-new-image-from-a-container-s-changes">Create a new image from a container&rsquo;s changes</h3>

<p><code>POST /commit</code></p>

<p>Create a new image from a container&rsquo;s changes</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /commit?container=44c004db4b17&amp;comment=message&amp;repo=myrepo HTTP/1.1
Content-Type: application/json

{
     &quot;Hostname&quot;: &quot;&quot;,
     &quot;Domainname&quot;: &quot;&quot;,
     &quot;User&quot;: &quot;&quot;,
     &quot;AttachStdin&quot;: false,
     &quot;AttachStdout&quot;: true,
     &quot;AttachStderr&quot;: true,
     &quot;Tty&quot;: false,
     &quot;OpenStdin&quot;: false,
     &quot;StdinOnce&quot;: false,
     &quot;Env&quot;: null,
     &quot;Cmd&quot;: [
             &quot;date&quot;
     ],
     &quot;Mounts&quot;: [
       {
         &quot;Source&quot;: &quot;/data&quot;,
         &quot;Destination&quot;: &quot;/data&quot;,
         &quot;Mode&quot;: &quot;ro,Z&quot;,
         &quot;RW&quot;: false
       }
     ],
     &quot;Labels&quot;: {
             &quot;key1&quot;: &quot;value1&quot;,
             &quot;key2&quot;: &quot;value2&quot;
      },
     &quot;WorkingDir&quot;: &quot;&quot;,
     &quot;NetworkDisabled&quot;: false,
     &quot;ExposedPorts&quot;: {
             &quot;22/tcp&quot;: {}
     }
}
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 201 Created
Content-Type: application/json

{&quot;Id&quot;: &quot;596069db4bf5&quot;}
</code></pre>

<p><strong>JSON parameters</strong>:</p>

<ul>
<li><strong>config</strong> - the container&rsquo;s configuration</li>
</ul>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>container</strong> – source container</li>
<li><strong>repo</strong> – repository</li>
<li><strong>tag</strong> – tag</li>
<li><strong>comment</strong> – commit message</li>
<li><strong>author</strong> – author (e.g., &ldquo;John Hannibal Smith
&lt;<a href="mailto:hannibal%40a-team.com">hannibal@a-team.com</a>&gt;&ldquo;)</li>
<li><strong>pause</strong> – 1/True/true or 0/False/false, whether to pause the container before committing</li>
<li><strong>changes</strong> – Dockerfile instructions to apply while committing</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>201</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="monitor-docker-s-events">Monitor Docker&rsquo;s events</h3>

<p><code>GET /events</code></p>

<p>Get container events from docker, in real time via streaming.</p>

<p>Docker containers report the following events:</p>

<pre><code>attach, commit, copy, create, destroy, die, exec_create, exec_start, export, kill, oom, pause, rename, resize, restart, start, stop, top, unpause, update
</code></pre>

<p>Docker images report the following events:</p>

<pre><code>delete, import, pull, push, tag, untag
</code></pre>

<p>Docker volumes report the following events:</p>

<pre><code>create, mount, unmount, destroy
</code></pre>

<p>Docker networks report the following events:</p>

<pre><code>create, connect, disconnect, destroy
</code></pre>

<p><strong>Example request</strong>:</p>

<pre><code>GET /events?since=1374067924
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json
Server: Docker/1.10.0 (linux)
Date: Fri, 29 Apr 2016 15:18:06 GMT
Transfer-Encoding: chunked

{
  &quot;status&quot;: &quot;pull&quot;,
  &quot;id&quot;: &quot;alpine:latest&quot;,
  &quot;Type&quot;: &quot;image&quot;,
  &quot;Action&quot;: &quot;pull&quot;,
  &quot;Actor&quot;: {
    &quot;ID&quot;: &quot;alpine:latest&quot;,
    &quot;Attributes&quot;: {
      &quot;name&quot;: &quot;alpine&quot;
    }
  },
  &quot;time&quot;: 1461943101,
  &quot;timeNano&quot;: 1461943101301854122
}
{
  &quot;status&quot;: &quot;create&quot;,
  &quot;id&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
  &quot;from&quot;: &quot;alpine&quot;,
  &quot;Type&quot;: &quot;container&quot;,
  &quot;Action&quot;: &quot;create&quot;,
  &quot;Actor&quot;: {
    &quot;ID&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
    &quot;Attributes&quot;: {
      &quot;com.example.some-label&quot;: &quot;some-label-value&quot;,
      &quot;image&quot;: &quot;alpine&quot;,
      &quot;name&quot;: &quot;my-container&quot;
    }
  },
  &quot;time&quot;: 1461943101,
  &quot;timeNano&quot;: 1461943101381709551
}
{
  &quot;status&quot;: &quot;attach&quot;,
  &quot;id&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
  &quot;from&quot;: &quot;alpine&quot;,
  &quot;Type&quot;: &quot;container&quot;,
  &quot;Action&quot;: &quot;attach&quot;,
  &quot;Actor&quot;: {
    &quot;ID&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
    &quot;Attributes&quot;: {
      &quot;com.example.some-label&quot;: &quot;some-label-value&quot;,
      &quot;image&quot;: &quot;alpine&quot;,
      &quot;name&quot;: &quot;my-container&quot;
    }
  },
  &quot;time&quot;: 1461943101,
  &quot;timeNano&quot;: 1461943101383858412
}
{
  &quot;Type&quot;: &quot;network&quot;,
  &quot;Action&quot;: &quot;connect&quot;,
  &quot;Actor&quot;: {
    &quot;ID&quot;: &quot;7dc8ac97d5d29ef6c31b6052f3938c1e8f2749abbd17d1bd1febf2608db1b474&quot;,
    &quot;Attributes&quot;: {
      &quot;container&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
      &quot;name&quot;: &quot;bridge&quot;,
      &quot;type&quot;: &quot;bridge&quot;
    }
  },
  &quot;time&quot;: 1461943101,
  &quot;timeNano&quot;: 1461943101394865557
}
{
  &quot;status&quot;: &quot;start&quot;,
  &quot;id&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
  &quot;from&quot;: &quot;alpine&quot;,
  &quot;Type&quot;: &quot;container&quot;,
  &quot;Action&quot;: &quot;start&quot;,
  &quot;Actor&quot;: {
    &quot;ID&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
    &quot;Attributes&quot;: {
      &quot;com.example.some-label&quot;: &quot;some-label-value&quot;,
      &quot;image&quot;: &quot;alpine&quot;,
      &quot;name&quot;: &quot;my-container&quot;
    }
  },
  &quot;time&quot;: 1461943101,
  &quot;timeNano&quot;: 1461943101607533796
}
{
  &quot;status&quot;: &quot;resize&quot;,
  &quot;id&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
  &quot;from&quot;: &quot;alpine&quot;,
  &quot;Type&quot;: &quot;container&quot;,
  &quot;Action&quot;: &quot;resize&quot;,
  &quot;Actor&quot;: {
    &quot;ID&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
    &quot;Attributes&quot;: {
      &quot;com.example.some-label&quot;: &quot;some-label-value&quot;,
      &quot;height&quot;: &quot;46&quot;,
      &quot;image&quot;: &quot;alpine&quot;,
      &quot;name&quot;: &quot;my-container&quot;,
      &quot;width&quot;: &quot;204&quot;
    }
  },
  &quot;time&quot;: 1461943101,
  &quot;timeNano&quot;: 1461943101610269268
}
{
  &quot;status&quot;: &quot;die&quot;,
  &quot;id&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
  &quot;from&quot;: &quot;alpine&quot;,
  &quot;Type&quot;: &quot;container&quot;,
  &quot;Action&quot;: &quot;die&quot;,
  &quot;Actor&quot;: {
    &quot;ID&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
    &quot;Attributes&quot;: {
      &quot;com.example.some-label&quot;: &quot;some-label-value&quot;,
      &quot;exitCode&quot;: &quot;0&quot;,
      &quot;image&quot;: &quot;alpine&quot;,
      &quot;name&quot;: &quot;my-container&quot;
    }
  },
  &quot;time&quot;: 1461943105,
  &quot;timeNano&quot;: 1461943105079144137
}
{
  &quot;Type&quot;: &quot;network&quot;,
  &quot;Action&quot;: &quot;disconnect&quot;,
  &quot;Actor&quot;: {
    &quot;ID&quot;: &quot;7dc8ac97d5d29ef6c31b6052f3938c1e8f2749abbd17d1bd1febf2608db1b474&quot;,
    &quot;Attributes&quot;: {
      &quot;container&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
      &quot;name&quot;: &quot;bridge&quot;,
      &quot;type&quot;: &quot;bridge&quot;
    }
  },
  &quot;time&quot;: 1461943105,
  &quot;timeNano&quot;: 1461943105230860245
}
{
  &quot;status&quot;: &quot;destroy&quot;,
  &quot;id&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
  &quot;from&quot;: &quot;alpine&quot;,
  &quot;Type&quot;: &quot;container&quot;,
  &quot;Action&quot;: &quot;destroy&quot;,
  &quot;Actor&quot;: {
    &quot;ID&quot;: &quot;ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743&quot;,
    &quot;Attributes&quot;: {
      &quot;com.example.some-label&quot;: &quot;some-label-value&quot;,
      &quot;image&quot;: &quot;alpine&quot;,
      &quot;name&quot;: &quot;my-container&quot;
    }
  },
  &quot;time&quot;: 1461943105,
  &quot;timeNano&quot;: 1461943105338056026
}
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>since</strong> – Timestamp. Show all events created since timestamp and then stream</li>
<li><strong>until</strong> – Timestamp. Show events created until given timestamp and stop streaming</li>
<li><strong>filters</strong> – A json encoded value of the filters (a map[string][]string) to process on the event list. Available filters:

<ul>
<li><code>container=&lt;string&gt;</code>; -- container to filter</li>
<li><code>event=&lt;string&gt;</code>; -- event to filter</li>
<li><code>image=&lt;string&gt;</code>; -- image to filter</li>
<li><code>label=&lt;string&gt;</code>; -- image and container label to filter</li>
<li><code>type=&lt;string&gt;</code>; -- either <code>container</code> or <code>image</code> or <code>volume</code> or <code>network</code></li>
<li><code>volume=&lt;string&gt;</code>; -- volume to filter</li>
<li><code>network=&lt;string&gt;</code>; -- network to filter</li>
</ul></li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="get-a-tarball-containing-all-images-in-a-repository">Get a tarball containing all images in a repository</h3>

<p><code>GET /images/(name)/get</code></p>

<p>Get a tarball containing all images and metadata for the repository specified
by <code>name</code>.</p>

<p>If <code>name</code> is a specific name and tag (e.g. ubuntu:latest), then only that image
(and its parents) are returned. If <code>name</code> is an image ID, similarly only that
image (and its parents) are returned, but with the exclusion of the
&lsquo;repositories&rsquo; file in the tarball, as there were no image names referenced.</p>

<p>See the <a href="#image-tarball-format">image tarball format</a> for more details.</p>

<p><strong>Example request</strong></p>

<pre><code>GET /images/ubuntu/get
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/x-tar

Binary data stream
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="get-a-tarball-containing-all-images">Get a tarball containing all images</h3>

<p><code>GET /images/get</code></p>

<p>Get a tarball containing all images and metadata for one or more repositories.</p>

<p>For each value of the <code>names</code> parameter: if it is a specific name and tag (e.g.
<code>ubuntu:latest</code>), then only that image (and its parents) are returned; if it is
an image ID, similarly only that image (and its parents) are returned and there
would be no names referenced in the &lsquo;repositories&rsquo; file for this image ID.</p>

<p>See the <a href="#image-tarball-format">image tarball format</a> for more details.</p>

<p><strong>Example request</strong></p>

<pre><code>GET /images/get?names=myname%2Fmyapp%3Alatest&amp;names=busybox
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/x-tar

Binary data stream
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="load-a-tarball-with-a-set-of-images-and-tags-into-docker">Load a tarball with a set of images and tags into docker</h3>

<p><code>POST /images/load</code></p>

<p>Load a set of images and tags into a Docker repository.
See the <a href="#image-tarball-format">image tarball format</a> for more details.</p>

<p><strong>Example request</strong></p>

<pre><code>POST /images/load
Content-Type: application/x-tar

Tarball in body
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>500</strong> – server error</li>
</ul>

<h3 id="image-tarball-format">Image tarball format</h3>

<p>An image tarball contains one directory per image layer (named using its long ID),
each containing these files:</p>

<ul>
<li><code>VERSION</code>: currently <code>1.0</code> - the file format version</li>
<li><code>json</code>: detailed layer information, similar to <code>docker inspect layer_id</code></li>
<li><code>layer.tar</code>: A tarfile containing the filesystem changes in this layer</li>
</ul>

<p>The <code>layer.tar</code> file contains <code>aufs</code> style <code>.wh..wh.aufs</code> files and directories
for storing attribute changes and deletions.</p>

<p>If the tarball defines a repository, the tarball should also include a <code>repositories</code> file at
the root that contains a list of repository and tag names mapped to layer IDs.</p>

<pre><code>{&quot;hello-world&quot;:
    {&quot;latest&quot;: &quot;565a9d68a73f6706862bfe8409a7f659776d4d60a8d096eb4a3cbce6999cc2a1&quot;}
}
</code></pre>

<h3 id="exec-create">Exec Create</h3>

<p><code>POST /containers/(id or name)/exec</code></p>

<p>Sets up an exec instance in a running container <code>id</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /containers/e90e34656806/exec HTTP/1.1
Content-Type: application/json

  {
   &quot;AttachStdin&quot;: false,
   &quot;AttachStdout&quot;: true,
   &quot;AttachStderr&quot;: true,
   &quot;DetachKeys&quot;: &quot;ctrl-p,ctrl-q&quot;,
   &quot;Tty&quot;: false,
   &quot;Cmd&quot;: [
                 &quot;date&quot;
         ]
  }
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 201 Created
Content-Type: application/json

{
     &quot;Id&quot;: &quot;f90e34656806&quot;,
     &quot;Warnings&quot;:[]
}
</code></pre>

<p><strong>JSON parameters</strong>:</p>

<ul>
<li><strong>AttachStdin</strong> - Boolean value, attaches to <code>stdin</code> of the <code>exec</code> command.</li>
<li><strong>AttachStdout</strong> - Boolean value, attaches to <code>stdout</code> of the <code>exec</code> command.</li>
<li><strong>AttachStderr</strong> - Boolean value, attaches to <code>stderr</code> of the <code>exec</code> command.</li>
<li><strong>DetachKeys</strong> – Override the key sequence for detaching a
    container. Format is a single character <code>[a-Z]</code> or <code>ctrl-&lt;value&gt;</code>
    where <code>&lt;value&gt;</code> is one of: <code>a-z</code>, <code>@</code>, <code>^</code>, <code>[</code>, <code>,</code> or <code>_</code>.</li>
<li><strong>Tty</strong> - Boolean value to allocate a pseudo-TTY.</li>
<li><strong>Cmd</strong> - Command to run specified as a string or an array of strings.</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>201</strong> – no error</li>
<li><strong>404</strong> – no such container</li>
<li><strong>409</strong> - container is paused</li>
<li><strong>500</strong> - server error</li>
</ul>

<h3 id="exec-start">Exec Start</h3>

<p><code>POST /exec/(id)/start</code></p>

<p>Starts a previously set up <code>exec</code> instance <code>id</code>. If <code>detach</code> is true, this API
returns after starting the <code>exec</code> command. Otherwise, this API sets up an
interactive session with the <code>exec</code> command.</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /exec/e90e34656806/start HTTP/1.1
Content-Type: application/json

{
 &quot;Detach&quot;: false,
 &quot;Tty&quot;: false
}
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/vnd.docker.raw-stream

{{ STREAM }}
</code></pre>

<p><strong>JSON parameters</strong>:</p>

<ul>
<li><strong>Detach</strong> - Detach from the <code>exec</code> command.</li>
<li><strong>Tty</strong> - Boolean value to allocate a pseudo-TTY.</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such exec instance</li>

<li><p><strong>409</strong> - container is paused</p>

<p><strong>Stream details</strong>:
Similar to the stream behavior of <code>POST /containers/(id or name)/attach</code> API</p></li>
</ul>

<h3 id="exec-resize">Exec Resize</h3>

<p><code>POST /exec/(id)/resize</code></p>

<p>Resizes the <code>tty</code> session used by the <code>exec</code> command <code>id</code>.  The unit is number of characters.
This API is valid only if <code>tty</code> was specified as part of creating and starting the <code>exec</code> command.</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /exec/e90e34656806/resize?h=40&amp;w=80 HTTP/1.1
Content-Type: text/plain
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 201 Created
Content-Type: text/plain
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>h</strong> – height of <code>tty</code> session</li>
<li><strong>w</strong> – width</li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>201</strong> – no error</li>
<li><strong>404</strong> – no such exec instance</li>
</ul>

<h3 id="exec-inspect">Exec Inspect</h3>

<p><code>GET /exec/(id)/json</code></p>

<p>Return low-level information about the <code>exec</code> command <code>id</code>.</p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /exec/11fb006128e8ceb3942e7c58d77750f24210e35f879dd204ac975c184b820b39/json HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{
  &quot;CanRemove&quot;: false,
  &quot;ContainerID&quot;: &quot;b53ee82b53a40c7dca428523e34f741f3abc51d9f297a14ff874bf761b995126&quot;,
  &quot;DetachKeys&quot;: &quot;&quot;,
  &quot;ExitCode&quot;: 2,
  &quot;ID&quot;: &quot;f33bbfb39f5b142420f4759b2348913bd4a8d1a6d7fd56499cb41a1bb91d7b3b&quot;,
  &quot;OpenStderr&quot;: true,
  &quot;OpenStdin&quot;: true,
  &quot;OpenStdout&quot;: true,
  &quot;ProcessConfig&quot;: {
    &quot;arguments&quot;: [
      &quot;-c&quot;,
      &quot;exit 2&quot;
    ],
    &quot;entrypoint&quot;: &quot;sh&quot;,
    &quot;privileged&quot;: false,
    &quot;tty&quot;: true,
    &quot;user&quot;: &quot;1000&quot;
  },
  &quot;Running&quot;: false
}
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> – no error</li>
<li><strong>404</strong> – no such exec instance</li>
<li><strong>500</strong> - server error</li>
</ul>

<h2 id="2-4-volumes">2.4 Volumes</h2>

<h3 id="list-volumes">List volumes</h3>

<p><code>GET /volumes</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /volumes HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{
  &quot;Volumes&quot;: [
    {
      &quot;Name&quot;: &quot;tardis&quot;,
      &quot;Driver&quot;: &quot;local&quot;,
      &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/tardis&quot;
    }
  ],
  &quot;Warnings&quot;: []
}
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>filters</strong> - JSON encoded value of the filters (a <code>map[string][]string</code>) to process on the volumes list. There is one available filter: <code>dangling=true</code></li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> - no error</li>
<li><strong>500</strong> - server error</li>
</ul>

<h3 id="create-a-volume">Create a volume</h3>

<p><code>POST /volumes/create</code></p>

<p>Create a volume</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /volumes/create HTTP/1.1
Content-Type: application/json

{
  &quot;Name&quot;: &quot;tardis&quot;
}
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 201 Created
Content-Type: application/json

{
  &quot;Name&quot;: &quot;tardis&quot;,
  &quot;Driver&quot;: &quot;local&quot;,
  &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/tardis&quot;
}
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>201</strong> - no error</li>
<li><strong>500</strong>  - server error</li>
</ul>

<p><strong>JSON parameters</strong>:</p>

<ul>
<li><strong>Name</strong> - The new volume&rsquo;s name. If not specified, Docker generates a name.</li>
<li><strong>Driver</strong> - Name of the volume driver to use. Defaults to <code>local</code> for the name.</li>
<li><strong>DriverOpts</strong> - A mapping of driver options and values. These options are
passed directly to the driver and are driver specific.</li>
</ul>

<h3 id="inspect-a-volume">Inspect a volume</h3>

<p><code>GET /volumes/(name)</code></p>

<p>Return low-level information on the volume <code>name</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /volumes/tardis
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{
  &quot;Name&quot;: &quot;tardis&quot;,
  &quot;Driver&quot;: &quot;local&quot;,
  &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/tardis&quot;
}
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> - no error</li>
<li><strong>404</strong> - no such volume</li>
<li><strong>500</strong> - server error</li>
</ul>

<h3 id="remove-a-volume">Remove a volume</h3>

<p><code>DELETE /volumes/(name)</code></p>

<p>Instruct the driver to remove the volume (<code>name</code>).</p>

<p><strong>Example request</strong>:</p>

<pre><code>DELETE /volumes/tardis HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 204 No Content
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>204</strong> - no error</li>
<li><strong>404</strong> - no such volume or volume driver</li>
<li><strong>409</strong> - volume is in use and cannot be removed</li>
<li><strong>500</strong> - server error</li>
</ul>

<h2 id="2-5-networks">2.5 Networks</h2>

<h3 id="list-networks">List networks</h3>

<p><code>GET /networks</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /networks?filters={&quot;type&quot;:{&quot;custom&quot;:true}} HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

[
  {
    &quot;Name&quot;: &quot;bridge&quot;,
    &quot;Id&quot;: &quot;f2de39df4171b0dc801e8002d1d999b77256983dfc63041c0f34030aa3977566&quot;,
    &quot;Scope&quot;: &quot;local&quot;,
    &quot;Driver&quot;: &quot;bridge&quot;,
    &quot;IPAM&quot;: {
      &quot;Driver&quot;: &quot;default&quot;,
      &quot;Config&quot;: [
        {
          &quot;Subnet&quot;: &quot;172.17.0.0/16&quot;
        }
      ]
    },
    &quot;Containers&quot;: {
      &quot;39b69226f9d79f5634485fb236a23b2fe4e96a0a94128390a7fbbcc167065867&quot;: {
        &quot;EndpointID&quot;: &quot;ed2419a97c1d9954d05b46e462e7002ea552f216e9b136b80a7db8d98b442eda&quot;,
        &quot;MacAddress&quot;: &quot;02:42:ac:11:00:02&quot;,
        &quot;IPv4Address&quot;: &quot;172.17.0.2/16&quot;,
        &quot;IPv6Address&quot;: &quot;&quot;
      }
    },
    &quot;Options&quot;: {
      &quot;com.docker.network.bridge.default_bridge&quot;: &quot;true&quot;,
      &quot;com.docker.network.bridge.enable_icc&quot;: &quot;true&quot;,
      &quot;com.docker.network.bridge.enable_ip_masquerade&quot;: &quot;true&quot;,
      &quot;com.docker.network.bridge.host_binding_ipv4&quot;: &quot;0.0.0.0&quot;,
      &quot;com.docker.network.bridge.name&quot;: &quot;docker0&quot;,
      &quot;com.docker.network.driver.mtu&quot;: &quot;1500&quot;
    }
  },
  {
    &quot;Name&quot;: &quot;none&quot;,
    &quot;Id&quot;: &quot;e086a3893b05ab69242d3c44e49483a3bbbd3a26b46baa8f61ab797c1088d794&quot;,
    &quot;Scope&quot;: &quot;local&quot;,
    &quot;Driver&quot;: &quot;null&quot;,
    &quot;IPAM&quot;: {
      &quot;Driver&quot;: &quot;default&quot;,
      &quot;Config&quot;: []
    },
    &quot;Containers&quot;: {},
    &quot;Options&quot;: {}
  },
  {
    &quot;Name&quot;: &quot;host&quot;,
    &quot;Id&quot;: &quot;13e871235c677f196c4e1ecebb9dc733b9b2d2ab589e30c539efeda84a24215e&quot;,
    &quot;Scope&quot;: &quot;local&quot;,
    &quot;Driver&quot;: &quot;host&quot;,
    &quot;IPAM&quot;: {
      &quot;Driver&quot;: &quot;default&quot;,
      &quot;Config&quot;: []
    },
    &quot;Containers&quot;: {},
    &quot;Options&quot;: {}
  }
]
</code></pre>

<p><strong>Query parameters</strong>:</p>

<ul>
<li><strong>filters</strong> - JSON encoded network list filter. The filter value is one of:

<ul>
<li><code>id=&lt;network-id&gt;</code> Matches all or part of a network id.</li>
<li><code>name=&lt;network-name&gt;</code> Matches all or part of a network name.</li>
<li><code>type=[&quot;custom&quot;|&quot;builtin&quot;]</code> Filters networks by type. The <code>custom</code> keyword returns all user-defined networks.</li>
</ul></li>
</ul>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> - no error</li>
<li><strong>500</strong> - server error</li>
</ul>

<h3 id="inspect-network">Inspect network</h3>

<p><code>GET /networks/&lt;network-id&gt;</code></p>

<p><strong>Example request</strong>:</p>

<pre><code>GET /networks/7d86d31b1478e7cca9ebed7e73aa0fdeec46c5ca29497431d3007d2d9e15ed99 HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
Content-Type: application/json

{
  &quot;Name&quot;: &quot;net01&quot;,
  &quot;Id&quot;: &quot;7d86d31b1478e7cca9ebed7e73aa0fdeec46c5ca29497431d3007d2d9e15ed99&quot;,
  &quot;Scope&quot;: &quot;local&quot;,
  &quot;Driver&quot;: &quot;bridge&quot;,
  &quot;IPAM&quot;: {
    &quot;Driver&quot;: &quot;default&quot;,
    &quot;Config&quot;: [
      {
        &quot;Subnet&quot;: &quot;172.19.0.0/16&quot;,
        &quot;Gateway&quot;: &quot;172.19.0.1/16&quot;
      }
    ],
    &quot;Options&quot;: {
        &quot;foo&quot;: &quot;bar&quot;
    }
  },
  &quot;Containers&quot;: {
    &quot;19a4d5d687db25203351ed79d478946f861258f018fe384f229f2efa4b23513c&quot;: {
      &quot;Name&quot;: &quot;test&quot;,
      &quot;EndpointID&quot;: &quot;628cadb8bcb92de107b2a1e516cbffe463e321f548feb37697cce00ad694f21a&quot;,
      &quot;MacAddress&quot;: &quot;02:42:ac:13:00:02&quot;,
      &quot;IPv4Address&quot;: &quot;172.19.0.2/16&quot;,
      &quot;IPv6Address&quot;: &quot;&quot;
    }
  },
  &quot;Options&quot;: {
    &quot;com.docker.network.bridge.default_bridge&quot;: &quot;true&quot;,
    &quot;com.docker.network.bridge.enable_icc&quot;: &quot;true&quot;,
    &quot;com.docker.network.bridge.enable_ip_masquerade&quot;: &quot;true&quot;,
    &quot;com.docker.network.bridge.host_binding_ipv4&quot;: &quot;0.0.0.0&quot;,
    &quot;com.docker.network.bridge.name&quot;: &quot;docker0&quot;,
    &quot;com.docker.network.driver.mtu&quot;: &quot;1500&quot;
  }
}
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> - no error</li>
<li><strong>404</strong> - network not found</li>
</ul>

<h3 id="create-a-network">Create a network</h3>

<p><code>POST /networks/create</code></p>

<p>Create a network</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /networks/create HTTP/1.1
Content-Type: application/json

{
  &quot;Name&quot;:&quot;isolated_nw&quot;,
  &quot;Driver&quot;:&quot;bridge&quot;,
  &quot;IPAM&quot;:{
    &quot;Config&quot;:[
      {
        &quot;Subnet&quot;:&quot;172.20.0.0/16&quot;,
        &quot;IPRange&quot;:&quot;172.20.10.0/24&quot;,
        &quot;Gateway&quot;:&quot;172.20.10.11&quot;
      },
      {
        &quot;Subnet&quot;:&quot;2001:db8:abcd::/64&quot;,
        &quot;Gateway&quot;:&quot;2001:db8:abcd::1011&quot;
      }
    ],
    &quot;Options&quot;: {
      &quot;foo&quot;: &quot;bar&quot;
    }
  },
  &quot;Internal&quot;:true
}
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 201 Created
Content-Type: application/json

{
  &quot;Id&quot;: &quot;22be93d5babb089c5aab8dbc369042fad48ff791584ca2da2100db837a1c7c30&quot;,
  &quot;Warning&quot;: &quot;&quot;
}
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>201</strong> - no error</li>
<li><strong>404</strong> - plugin not found</li>
<li><strong>500</strong> - server error</li>
</ul>

<p><strong>JSON parameters</strong>:</p>

<ul>
<li><strong>Name</strong> - The new network&rsquo;s name. this is a mandatory field</li>
<li><strong>Driver</strong> - Name of the network driver plugin to use. Defaults to <code>bridge</code> driver</li>
<li><strong>IPAM</strong> - Optional custom IP scheme for the network</li>
<li><strong>Options</strong> - Network specific options to be used by the drivers</li>
<li><strong>CheckDuplicate</strong> - Requests daemon to check for networks with same name</li>
</ul>

<h3 id="connect-a-container-to-a-network">Connect a container to a network</h3>

<p><code>POST /networks/(id)/connect</code></p>

<p>Connect a container to a network</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /networks/22be93d5babb089c5aab8dbc369042fad48ff791584ca2da2100db837a1c7c30/connect HTTP/1.1
Content-Type: application/json

{
  &quot;Container&quot;:&quot;3613f73ba0e4&quot;,
  &quot;EndpointConfig&quot;: {
    &quot;IPAMConfig&quot;: {
        &quot;IPv4Address&quot;:&quot;172.24.56.89&quot;,
        &quot;IPv6Address&quot;:&quot;2001:db8::5689&quot;
    }
  }
}
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> - no error</li>
<li><strong>404</strong> - network or container is not found</li>
<li><strong>500</strong> - Internal Server Error</li>
</ul>

<p><strong>JSON parameters</strong>:</p>

<ul>
<li><strong>container</strong> - container-id/name to be connected to the network</li>
</ul>

<h3 id="disconnect-a-container-from-a-network">Disconnect a container from a network</h3>

<p><code>POST /networks/(id)/disconnect</code></p>

<p>Disconnect a container from a network</p>

<p><strong>Example request</strong>:</p>

<pre><code>POST /networks/22be93d5babb089c5aab8dbc369042fad48ff791584ca2da2100db837a1c7c30/disconnect HTTP/1.1
Content-Type: application/json

{
  &quot;Container&quot;:&quot;3613f73ba0e4&quot;,
  &quot;Force&quot;:false
}
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> - no error</li>
<li><strong>404</strong> - network or container not found</li>
<li><strong>500</strong> - Internal Server Error</li>
</ul>

<p><strong>JSON parameters</strong>:</p>

<ul>
<li><strong>Container</strong> - container-id/name to be disconnected from a network</li>
<li><strong>Force</strong> - Force the container to disconnect from a network</li>
</ul>

<h3 id="remove-a-network">Remove a network</h3>

<p><code>DELETE /networks/(id)</code></p>

<p>Instruct the driver to remove the network (<code>id</code>).</p>

<p><strong>Example request</strong>:</p>

<pre><code>DELETE /networks/22be93d5babb089c5aab8dbc369042fad48ff791584ca2da2100db837a1c7c30 HTTP/1.1
</code></pre>

<p><strong>Example response</strong>:</p>

<pre><code>HTTP/1.1 200 OK
</code></pre>

<p><strong>Status codes</strong>:</p>

<ul>
<li><strong>200</strong> - no error</li>
<li><strong>404</strong> - no such network</li>
<li><strong>500</strong> - server error</li>
</ul>

<h1 id="3-going-further">3. Going further</h1>

<h2 id="3-1-inside-docker-run">3.1 Inside <code>docker run</code></h2>

<p>As an example, the <code>docker run</code> command line makes the following API calls:</p>

<ul>
<li><p>Create the container</p></li>

<li><p>If the status code is 404, it means the image doesn&rsquo;t exist:</p>

<ul>
<li>Try to pull it.</li>
<li>Then, retry to create the container.</li>
</ul></li>

<li><p>Start the container.</p></li>

<li><p>If you are not in detached mode:</p></li>

<li><p>Attach to the container, using <code>logs=1</code> (to have <code>stdout</code> and
  <code>stderr</code> from the container&rsquo;s start) and <code>stream=1</code></p></li>

<li><p>If in detached mode or only <code>stdin</code> is attached, display the container&rsquo;s id.</p></li>
</ul>

<h2 id="3-2-hijacking">3.2 Hijacking</h2>

<p>In this version of the API, <code>/attach</code>, uses hijacking to transport <code>stdin</code>,
<code>stdout</code>, and <code>stderr</code> on the same socket.</p>

<p>To hint potential proxies about connection hijacking, Docker client sends
connection upgrade headers similarly to websocket.</p>

<pre><code>Upgrade: tcp
Connection: Upgrade
</code></pre>

<p>When Docker daemon detects the <code>Upgrade</code> header, it switches its status code
from <strong>200 OK</strong> to <strong>101 UPGRADED</strong> and resends the same headers.</p>

<h2 id="3-3-cors-requests">3.3 CORS Requests</h2>

<p>To set cross origin requests to the remote api please give values to
<code>--api-cors-header</code> when running Docker in daemon mode. Set * (asterisk) allows all,
default or blank means CORS disabled</p>

<pre><code>$ docker daemon -H=&quot;192.168.1.9:2375&quot; --api-cors-header=&quot;http://foo.bar&quot;
</code></pre>

                </section>
            </div>

            <div class="hidden-xs hidden-sm col-md-2 tableofcontents_section">
                <section class="section" id="TableOfContentsSection">
		    <span class="title_section">
  <form class="search-form form-inline ng-pristine ng-valid" action="/search/">
    <input class="search-field form-control" id="st-search-input" value="" name="q" placeholder="Search the docs" type="search">
    <button type="submit" class="search-submit btn btn-default">Search</button>
  </form>
		    </span>
                    <span class="heading">On this page</span>
                    <nav id="TableOfContents">
<ul>
<li><a href="#docker-remote-api-v1-22">Docker Remote API v1.22</a>
<ul>
<li><a href="#1-brief-introduction">1. Brief introduction</a></li>
</ul></li>
<li><a href="#2-endpoints">2. Endpoints</a>
<ul>
<li><a href="#2-1-containers">2.1 Containers</a>
<ul>
<li><a href="#list-containers">List containers</a></li>
<li><a href="#create-a-container">Create a container</a></li>
<li><a href="#inspect-a-container">Inspect a container</a></li>
<li><a href="#list-processes-running-inside-a-container">List processes running inside a container</a></li>
<li><a href="#get-container-logs">Get container logs</a></li>
<li><a href="#inspect-changes-on-a-container-s-filesystem">Inspect changes on a container&rsquo;s filesystem</a></li>
<li><a href="#export-a-container">Export a container</a></li>
<li><a href="#get-container-stats-based-on-resource-usage">Get container stats based on resource usage</a></li>
<li><a href="#resize-a-container-tty">Resize a container TTY</a></li>
<li><a href="#start-a-container">Start a container</a></li>
<li><a href="#stop-a-container">Stop a container</a></li>
<li><a href="#restart-a-container">Restart a container</a></li>
<li><a href="#kill-a-container">Kill a container</a></li>
<li><a href="#update-a-container">Update a container</a></li>
<li><a href="#rename-a-container">Rename a container</a></li>
<li><a href="#pause-a-container">Pause a container</a></li>
<li><a href="#unpause-a-container">Unpause a container</a></li>
<li><a href="#attach-to-a-container">Attach to a container</a></li>
<li><a href="#attach-to-a-container-websocket">Attach to a container (websocket)</a></li>
<li><a href="#wait-a-container">Wait a container</a></li>
<li><a href="#remove-a-container">Remove a container</a></li>
<li><a href="#copy-files-or-folders-from-a-container">Copy files or folders from a container</a></li>
<li><a href="#retrieving-information-about-files-and-folders-in-a-container">Retrieving information about files and folders in a container</a></li>
<li><a href="#get-an-archive-of-a-filesystem-resource-in-a-container">Get an archive of a filesystem resource in a container</a></li>
<li><a href="#extract-an-archive-of-files-or-folders-to-a-directory-in-a-container">Extract an archive of files or folders to a directory in a container</a></li>
</ul></li>
<li><a href="#2-2-images">2.2 Images</a>
<ul>
<li><a href="#list-images">List Images</a></li>
<li><a href="#build-image-from-a-dockerfile">Build image from a Dockerfile</a></li>
<li><a href="#create-an-image">Create an image</a></li>
<li><a href="#inspect-an-image">Inspect an image</a></li>
<li><a href="#get-the-history-of-an-image">Get the history of an image</a></li>
<li><a href="#push-an-image-on-the-registry">Push an image on the registry</a></li>
<li><a href="#tag-an-image-into-a-repository">Tag an image into a repository</a></li>
<li><a href="#remove-an-image">Remove an image</a></li>
<li><a href="#search-images">Search images</a></li>
</ul></li>
<li><a href="#2-3-misc">2.3 Misc</a>
<ul>
<li><a href="#check-auth-configuration">Check auth configuration</a></li>
<li><a href="#display-system-wide-information">Display system-wide information</a></li>
<li><a href="#show-the-docker-version-information">Show the docker version information</a></li>
<li><a href="#ping-the-docker-server">Ping the docker server</a></li>
<li><a href="#create-a-new-image-from-a-container-s-changes">Create a new image from a container&rsquo;s changes</a></li>
<li><a href="#monitor-docker-s-events">Monitor Docker&rsquo;s events</a></li>
<li><a href="#get-a-tarball-containing-all-images-in-a-repository">Get a tarball containing all images in a repository</a></li>
<li><a href="#get-a-tarball-containing-all-images">Get a tarball containing all images</a></li>
<li><a href="#load-a-tarball-with-a-set-of-images-and-tags-into-docker">Load a tarball with a set of images and tags into docker</a></li>
<li><a href="#image-tarball-format">Image tarball format</a></li>
<li><a href="#exec-create">Exec Create</a></li>
<li><a href="#exec-start">Exec Start</a></li>
<li><a href="#exec-resize">Exec Resize</a></li>
<li><a href="#exec-inspect">Exec Inspect</a></li>
</ul></li>
<li><a href="#2-4-volumes">2.4 Volumes</a>
<ul>
<li><a href="#list-volumes">List volumes</a></li>
<li><a href="#create-a-volume">Create a volume</a></li>
<li><a href="#inspect-a-volume">Inspect a volume</a></li>
<li><a href="#remove-a-volume">Remove a volume</a></li>
</ul></li>
<li><a href="#2-5-networks">2.5 Networks</a>
<ul>
<li><a href="#list-networks">List networks</a></li>
<li><a href="#inspect-network">Inspect network</a></li>
<li><a href="#create-a-network">Create a network</a></li>
<li><a href="#connect-a-container-to-a-network">Connect a container to a network</a></li>
<li><a href="#disconnect-a-container-from-a-network">Disconnect a container from a network</a></li>
<li><a href="#remove-a-network">Remove a network</a></li>
</ul></li>
</ul></li>
<li><a href="#3-going-further">3. Going further</a>
<ul>
<li><a href="#3-1-inside-docker-run">3.1 Inside <code>docker run</code></a></li>
<li><a href="#3-2-hijacking">3.2 Hijacking</a></li>
<li><a href="#3-3-cors-requests">3.3 CORS Requests</a></li>
</ul></li>
</ul>
</nav>
                </section>
            </div>

        </div>
    </div>
</div>

                  <a class="exit-off-canvas"></a>
                </div>
        </div>

        <div class="moby_footer">
<i class="bar"></i>
<i class="moby"></i>
</div>
	<footer class="main_footer">
	<div class="container">
		<div class="top_footer">
			<div class="row">
				<div class="col-xs-12 col-sm-5 col-md-5 col-sm-push-3 col-md-push-3">
					<h6>Connect</h6>
					<p>Subscribe to our newsletter</p>
					<div class=" newsletter">
						<script src="//app-sj05.marketo.com/js/forms2/js/forms2.min.js"></script>
						<form id="mktoForm_1038"></form>
						<script>
							MktoForms2.loadForm("//app-sj05.marketo.com", "929-FJL-178", 1038, function(form) {
								form.onSuccess(function(values, followUpUrl) {
									location.href = "https://www.docker.com/thank-you-subscribing-docker-weekly";
									return false;
								});
							});
							MktoForms2.whenReady(function(form){
							 
							});
						</script>
					</div>
					<ul class="social-icons">
						<li class="facebook"><a target="_blank" href="https://www.facebook.com/docker.run">facebook</a></li>
						<li class="google"><a target="_blank" href="https://plus.google.com/u/0/communities/108146856671494713993">google-plus</a></li>
						<li class="github"><a target="_blank" href="https://github.com/docker/docker">github</a></li>
						<li class="linkedin"><a target="_blank" href="https://www.linkedin.com/company/docker">linkedin</a></li>
						<li class="youtube"><a target="_blank" href="https://www.youtube.com/user/dockerrun">youtube</a></li>
						<li class="reddit"><a target="_blank" href="https://www.reddit.com/r/docker">reddit</a></li>
						<li class="twitter"><a target="_blank" href="https://twitter.com/docker">twitter</a></li>
						<li class="slideshare"><a target="_blank" href="http://www.slideshare.net/docker">slideshare</a></li>
					</ul>
				</div>
				<div class="col-xs-6 col-sm-3 col-md-3 col-sm-pull-5 col-md-pull-5 sm-margin-top-40">
				<h6>Docker</h6>
					<ul class="menu"><li class="first leaf menu-mlid-1487"><a href="../../../../engine/getstarted/" target="_blank">Get Started</a></li>
<li class="leaf menu-mlid-1488"><a href="https://docs.docker.com/" target="_blank">Docs</a></li>
<li class="leaf menu-mlid-1490"><a href="https://blog.docker.com/" target="_blank">Blog</a></li>
<li class="leaf menu-mlid-1491"><a href="https://training.docker.com/" target="_blank">Training</a></li>
<li class="last leaf menu-mlid-1492"><a href="https://www.docker.com/open-source">Open Source</a></li>
</ul>				</div>
				<div class="col-xs-6 col-sm-4 col-md-4 sm-margin-top-40">
					<h6>Related Links</h6>
					 <ul id="cp_links">    <li><a href="https://www.docker.com/cp/container-management-deployment">Container Management Deployment</a></li>    <li><a href="https://www.docker.com/cp/docker-and-aws">Docker And Aws</a></li>    <li><a href="https://www.docker.com/cp/container-management-orchestration">Container Management Orchestration</a></li>    <li><a href="https://www.docker.com/cp/docker-and-kubernetes">Docker And Kubernetes</a></li>    <li><a href="https://www.docker.com/cp/container-orchestration-engines">Container Orchestration Engines</a></li>         </ul>					<div id="block-block-5" class="block block-block">
				</div>				</div>
			</div>
		</div>
		<div class="bottom_footer">
			<div class="footer-nav">
<div class="row">
	<div class="col-xs-12 col-sm-12 col-md-5 col-md-push-7">
		<nav class="primary-footer-sub-nav">
			<ul>
				<li><a href="https://www.docker.com/products/docker-hub">Hub</a></li>
				<li><a href="https://status.docker.com/">Status</a></li>
				<li><a href="https://www.docker.com/docker-security">Security</a></li>
				<li><a href="https://www.docker.com/legal">Legal</a></li>
				<li><a href="https://goto.docker.com/sales-inquiry.html">Contact</a></li>
			</ul>
		</nav>
	</div>
	<div class="col-xs-12 col-sm-12 col-md-7 col-md-pull-5">
		<p>Build, Ship, Run. An open platform for distributed applications for developers and sysadmins</p>
	</div>
</div>
			</div>
			<div class="footer-copyright">
				<p class="copyright">Copyright © 2016 Docker Inc. All rights reserved.</p>
			</div>
		</div>
	</div>
</footer>

<link rel="stylesheet" href="../../../../highlight/styles/github.css">
<script src="../../../../highlight/highlight.pack.js"></script>
<script>hljs.initHighlightingOnLoad();</script>

  <script src="../../../../assets/js/alljs.js"></script>
  
	<script async src="../../../../menu.js"></script>
	<script async src="../../../../assets/js/app.js"></script>
	<script async src="../../../../assets/js/anchorlinks.js"></script>

	
	<noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-WLGFZV" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
	<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
	new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
	j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
	'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
	})(window,document,'script','dataLayer','GTM-WLGFZV');</script>
	


<script type="text/javascript" src="https://cdn.jsdelivr.net/docsearch.js/2/docsearch.min.js"></script>
<script type="text/javascript"> docsearch({
apiKey: '828e35034e76dbb6fdc5b33c03d5702f',
indexName: 'docker',
autoSelect: false,
inputSelector: '#st-search-input',
debug: false
});
</script>

</body>
</html>

